{
  "version": 3,
  "sources": ["../node_modules/@sakai-ui/sakai-conversations/src/SakaiConversationsTagManager.js", "../node_modules/@sakai-ui/sakai-conversations/sakai-conversations-tag-manager.js"],
  "sourcesContent": ["import { html, nothing } from \"lit\";\nimport { SakaiElement } from \"@sakai-ui/sakai-element\";\n\nexport class SakaiConversationsTagManager extends SakaiElement {\n\n  static properties = {\n\n    siteId: { attribute: \"site-id\", type: String },\n    tags: { type: Array },\n\n    _tagsBeingEdited: { state: true },\n    _saveable: { state: true },\n  };\n\n  constructor() {\n\n    super();\n\n    this._tagsBeingEdited = [];\n\n    this.loadTranslations(\"conversations\").then(r => this.i18n = r);\n  }\n\n  _createTags() {\n\n    const field = this.querySelector(\"#tag-creation-field\");\n\n    // Split it, trim it, filter it and use a Set to make them unique, no duplicates!\n    const tagLabels\n      = [ ...new Set(field?.value?.split(\",\").map(t => t.trim()).filter(t => t.length > 0)) ];\n\n    // If any tags are already defined, ignore them\n    this.tags.map(t => t.label).forEach(t => {\n\n      const i = tagLabels.indexOf(t);\n      (i !== -1) && tagLabels.splice(i, 1);\n    });\n\n    if (!tagLabels?.length) {\n      field.value = \"\";\n      return;\n    }\n\n    const tagsData = tagLabels.map(label => ({ label, siteId: this.siteId }));\n\n    const url = `/api/sites/${this.siteId}/conversations/tags`;\n    fetch(url, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(tagsData),\n    })\n    .then(r => {\n\n      if (!r.ok) {\n        throw new Error(\"Network error while creating tags.\");\n      }\n      return r.json();\n    })\n    .then(tags => {\n\n      field.value = \"\";\n      this.dispatchEvent(new CustomEvent(\"tags-created\", { detail: { tags }, bubbles: true }));\n      this._saveable = false;\n    })\n    .catch (error => console.error(error));\n  }\n\n  _editTag(e) {\n\n    this._tagsBeingEdited.push(parseInt(e.target.dataset.tagId));\n    this.requestUpdate();\n  }\n\n  _cancelTagEditing(e) {\n\n    const index = this._tagsBeingEdited.indexOf(e.target.dataset.tagId);\n    this._tagsBeingEdited.splice(index, 1);\n    this.requestUpdate();\n  }\n\n  _saveTag(e) {\n\n    const id = e.target.dataset.tagId;\n    const label = this.querySelector(`#tag-${id}-editor`)?.value;\n\n    const body = this.tags.find(t => t.id == id);\n    body && (body.label = label);\n\n    const url = `/api/sites/${this.siteId}/conversations/tags/${id}`;\n    fetch(url, {\n      method: \"PUT\",\n      credentials: \"include\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(body),\n    })\n    .then(r => {\n\n      if (r.ok) {\n        return r.json();\n      }\n\n      throw new Error(\"Network error while saving tag.\");\n    })\n    .then(tag => {\n\n      this._cancelTagEditing(e);\n      this.dispatchEvent(new CustomEvent(\"tag-updated\", { detail: { tag }, bubbles: true }));\n    })\n    .catch (error => console.error(error));\n  }\n\n  _deleteTag(e) {\n\n    if (!confirm(\"Deleting this tag will remove it from all the topics in this site. Continue?\")) {\n      return;\n    }\n\n    const id = e.target.dataset.tagId;\n\n    const url = `/api/sites/${this.siteId}/conversations/tags/${id}`;\n    fetch(url, {\n      credentials: \"include\",\n      method: \"DELETE\",\n    })\n    .then(r => {\n\n      if (!r.ok) {\n        throw new Error(`Network error while deleting tag ${id}`);\n      } else {\n        this.dispatchEvent(new CustomEvent(\"tag-deleted\", { detail: { id }, bubbles: true }));\n      }\n    })\n    .catch(error => {\n      console.error(error);\n    });\n  }\n\n  _setSaveable() { this._saveable = true; }\n\n  shouldUpdate() {\n    return this.i18n;\n  }\n\n  render() {\n\n    return html`\n      <div class=\"add-topic-wrapper\">\n        <h1>${this.i18n.manage_tags}</h1>\n        <div class=\"add-topic-label\">${this.i18n.tags}</div>\n        <div>\n          <div>\n            <textarea id=\"tag-creation-field\"\n                aria-labelledby=\"tag-creation-instruction\"\n                @input=${this._setSaveable}></textarea>\n            <div id=\"tag-creation-instruction\" class=\"topic-option-label-text\">${this.i18n.add_new_tags_instruction}</div>\n          </div>\n        </div>\n        <div class=\"act\">\n          <button type=\"button\" class=\"btn btn-secondary\" @click=${this.cancel} ?disabled=${!this._saveable}>${this.i18n.cancel}</button>\n          <button type=\"button\" class=\"btn btn-primary\" @click=${this._createTags} ?disabled=${!this._saveable}>${this.i18n.add_new_tags}</button>\n        </div>\n        <div id=\"current-tags\">\n          ${this.tags.map(tag => html`\n          <div class=\"tag-row\">\n            <div class=\"tag-label\">${tag.label}</div>\n            <div>\n              <div class=\"tag-buttons\">\n                <input type=\"button\" data-tag-id=\"${tag.id}\" @click=${this._editTag} value=\"${this.i18n.edit}\">\n                <input type=\"button\" data-tag-id=\"${tag.id}\" @click=${this._deleteTag} value=\"${this.i18n.delete}\">\n              </div>\n            </div>\n          </div>\n          ${this._tagsBeingEdited.includes(tag.id) ? html`\n          <div class=\"add-topic-label\">${this.i18n.tag_name}</div>\n          <div class=\"tag-editor\">\n            <div><input id=\"tag-${tag.id}-editor\" type=\"text\" value=\"${tag.label}\"></div>\n            <div class=\"act\">\n              <input type=\"button\" class=\"active\" data-tag-id=\"${tag.id}\" @click=${this._saveTag} value=\"${this.i18n.save}\">\n              <input type=\"button\" data-tag-id=\"${tag.id}\" @click=${this._cancelTagEditing} value=\"${this.i18n.cancel}\">\n            </div>\n          </div>\n          ` : nothing }\n          `)}\n        </div>\n      </div>\n    `;\n  }\n}\n", "import { SakaiConversationsTagManager } from './src/SakaiConversationsTagManager.js';\n\ncustomElements.define('sakai-conversations-tag-manager', SakaiConversationsTagManager);\n"],
  "mappings": "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",
  "names": ["SakaiConversationsTagManager", "SakaiElement", "r", "field", "tagLabels", "t", "i", "tagsData", "label", "url", "tags", "error", "e", "index", "id", "body", "tag", "ke", "D", "SakaiConversationsTagManager"]
}
