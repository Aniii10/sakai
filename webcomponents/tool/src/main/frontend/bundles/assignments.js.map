{
  "version": 3,
  "sources": ["../node_modules/@sakai-ui/sakai-view-preferences/src/sakai-view-preferences.js", "../node_modules/@sakai-ui/sakai-grader/src/SakaiGraderToggle.js", "../node_modules/@sakai-ui/sakai-grader/sakai-grader-toggle.js"],
  "sourcesContent": ["function getViewPreferences(tool, options = { debug: false }) {\n\n  const url = `/direct/userPrefs/key/${portal.user.id}/viewpreferences.json`;\n\n  if (options.debug) {\n    console.debug(`getViewPreferences: url=${url}`);\n  }\n\n  return new Promise(resolve => {\n\n    fetch(url, { cache: \"no-store\", headers: { \"Content-Type\": \"application/json\" }, })\n    .then(d => d.json())\n    .then(json => {\n\n      const preferencesString = decodeURIComponent(json.data[tool]);\n      if (preferencesString && preferencesString !== \"undefined\") {\n        if (options.debug) {\n          console.debug(`getViewPreferences: resolving with \"${preferencesString}\"`);\n        }\n        resolve(preferencesString);\n      } else {\n        if (options.debug) {\n          console.debug(\"getViewPreferences: resolving with null\");\n        }\n        resolve(null);\n      }\n    })\n    .catch(error => { console.error(error); resolve(null); });\n  });\n}\n\nfunction updateViewPreferences(tool, value, options = { debug: false }) {\n\n  const url = `/direct/userPrefs/updateKey/${portal.user.id}/viewpreferences?${tool}=${encodeURIComponent(value)}`;\n\n  if (options.debug) {\n    console.debug(`updateViewPreferences: url=${url}`);\n    console.debug(`updateViewPreference: value=${value}`);\n  }\n\n  fetch(url, { method: \"PUT\", cache: \"no-store\" })\n  .catch(() => console.error(\n                    `Failed to update view preferences for tool '${tool}'. Take a look at the server logs?`));\n}\n\nexport { getViewPreferences, updateViewPreferences };\n", "import { SakaiElement } from \"@sakai-ui/sakai-element\";\nimport { html } from \"lit\";\nimport { getViewPreferences, updateViewPreferences } from \"@sakai-ui/sakai-view-preferences\";\n\nexport class SakaiGraderToggle extends SakaiElement {\n\n  static properties = {\n\n    checked: { type: Boolean },\n    uncheckedByDefault: { attribute: \"unchecked-by-default\", type: Boolean },\n    tool: { type: String },\n    _i18n: { state: true },\n  };\n\n  constructor() {\n\n    super();\n\n    this._i18n = {};\n    this.loadTranslations(\"grader-toggle\").then(i18n => this._i18n = i18n);\n  }\n\n  set tool(newValue) {\n\n    this._tool = newValue;\n    getViewPreferences(newValue).then(prefs => {\n\n      if (!prefs && !this.uncheckedByDefault) {\n        this.checked = true;\n      } else {\n        this.prefs = JSON.parse(prefs);\n        this.checked = this.prefs?.usegrader;\n      }\n    });\n  }\n\n  get tool() { return this._tool; }\n\n  shouldUpdate() { return this._i18n; }\n\n  render() {\n\n    return html`\n      <label>\n        <input type=\"checkbox\" ?checked=${this.checked} @click=${this.toggleChecked} />\n        ${this._i18n.use_grader}\n      </label>\n    `;\n  }\n\n  toggleChecked(e) {\n\n    this.prefs = this.prefs || {};\n    this.prefs.usegrader = e.target.checked;\n    updateViewPreferences(this.tool, JSON.stringify(this.prefs));\n  }\n}\n", "import { SakaiGraderToggle } from \"./src/SakaiGraderToggle.js\";\n\ncustomElements.define(\"sakai-grader-toggle\", SakaiGraderToggle);\n"],
  "mappings": "kGAAA,SAASA,EAAmBC,EAAMC,EAAU,CAAE,MAAO,EAAM,EAAG,CAE5D,IAAMC,EAAM,yBAAyB,OAAO,KAAK,EAAE,wBAEnD,OAAID,EAAQ,OACV,QAAQ,MAAM,2BAA2BC,CAAG,EAAE,EAGzC,IAAI,QAAQC,GAAW,CAE5B,MAAMD,EAAK,CAAE,MAAO,WAAY,QAAS,CAAE,eAAgB,kBAAmB,CAAG,CAAC,EACjF,KAAKE,GAAKA,EAAE,KAAK,CAAC,EAClB,KAAKC,GAAQ,CAEZ,IAAMC,EAAoB,mBAAmBD,EAAK,KAAKL,CAAI,CAAC,EACxDM,GAAqBA,IAAsB,aACzCL,EAAQ,OACV,QAAQ,MAAM,uCAAuCK,CAAiB,GAAG,EAE3EH,EAAQG,CAAiB,IAErBL,EAAQ,OACV,QAAQ,MAAM,yCAAyC,EAEzDE,EAAQ,IAAI,EAEhB,CAAC,EACA,MAAMI,GAAS,CAAE,QAAQ,MAAMA,CAAK,EAAGJ,EAAQ,IAAI,CAAG,CAAC,CAC1D,CAAC,CACH,CAEA,SAASK,EAAsBR,EAAMS,EAAOR,EAAU,CAAE,MAAO,EAAM,EAAG,CAEtE,IAAMC,EAAM,+BAA+B,OAAO,KAAK,EAAE,oBAAoBF,CAAI,IAAI,mBAAmBS,CAAK,CAAC,GAE1GR,EAAQ,QACV,QAAQ,MAAM,8BAA8BC,CAAG,EAAE,EACjD,QAAQ,MAAM,+BAA+BO,CAAK,EAAE,GAGtD,MAAMP,EAAK,CAAE,OAAQ,MAAO,MAAO,UAAW,CAAC,EAC9C,MAAM,IAAM,QAAQ,MACH,+CAA+CF,CAAI,oCAAoC,CAAC,CAC5G,CCvCO,IAAMU,EAAN,cAAgCC,CAAa,CAElD,OAAO,WAAa,CAElB,QAAS,CAAE,KAAM,OAAQ,EACzB,mBAAoB,CAAE,UAAW,uBAAwB,KAAM,OAAQ,EACvE,KAAM,CAAE,KAAM,MAAO,EACrB,MAAO,CAAE,MAAO,EAAK,CACvB,EAEA,aAAc,CAEZ,MAAM,EAEN,KAAK,MAAQ,CAAC,EACd,KAAK,iBAAiB,eAAe,EAAE,KAAKC,GAAQ,KAAK,MAAQA,CAAI,CACvE,CAEA,IAAI,KAAKC,EAAU,CAEjB,KAAK,MAAQA,EACbC,EAAmBD,CAAQ,EAAE,KAAKE,GAAS,CAErC,CAACA,GAAS,CAAC,KAAK,mBAClB,KAAK,QAAU,IAEf,KAAK,MAAQ,KAAK,MAAMA,CAAK,EAC7B,KAAK,QAAU,KAAK,OAAO,UAE/B,CAAC,CACH,CAEA,IAAI,MAAO,CAAE,OAAO,KAAK,KAAO,CAEhC,cAAe,CAAE,OAAO,KAAK,KAAO,CAEpC,QAAS,CAEP,OAAOC;AAAA;AAAA,0CAE+B,KAAK,OAAO,WAAW,KAAK,aAAa;AAAA,UACzE,KAAK,MAAM,UAAU;AAAA;AAAA,KAG7B,CAEA,cAAc,EAAG,CAEf,KAAK,MAAQ,KAAK,OAAS,CAAC,EAC5B,KAAK,MAAM,UAAY,EAAE,OAAO,QAChCC,EAAsB,KAAK,KAAM,KAAK,UAAU,KAAK,KAAK,CAAC,CAC7D,CACF,ECtDA,eAAe,OAAO,sBAAuBC,CAAiB",
  "names": ["getViewPreferences", "tool", "options", "url", "resolve", "d", "json", "preferencesString", "error", "updateViewPreferences", "value", "SakaiGraderToggle", "SakaiElement", "i18n", "newValue", "getViewPreferences", "prefs", "ke", "updateViewPreferences", "SakaiGraderToggle"]
}
