{
  "version": 3,
  "sources": ["../node_modules/@spectrum-web-components/base/src/version.js", "../node_modules/@spectrum-web-components/base/src/Base.ts", "../node_modules/@lit/reactive-element/src/decorators/property.ts", "../node_modules/@lit/reactive-element/src/decorators/base.ts", "../node_modules/@lit/reactive-element/src/decorators/query.ts", "../node_modules/@lit/reactive-element/src/decorators/query-assigned-nodes.ts", "../node_modules/@spectrum-web-components/base/src/sizedMixin.ts", "../node_modules/@spectrum-web-components/shared/src/get-label-from-slot.ts", "../node_modules/@lit-labs/observers/src/mutation-controller.ts", "../node_modules/@spectrum-web-components/shared/src/observe-slot-text.ts", "../node_modules/@spectrum-web-components/reactive-controllers/src/LanguageResolution.ts", "../node_modules/@spectrum-web-components/shared/src/random-id.ts", "../node_modules/@spectrum-web-components/icon/src/icon.css.ts", "../node_modules/@spectrum-web-components/icon/src/IconBase.ts", "../node_modules/@spectrum-web-components/icons-ui/src/custom-tag.ts", "../node_modules/@spectrum-web-components/icons-ui/src/icons/Asterisk100.ts", "../node_modules/@spectrum-web-components/icons-ui/src/elements/IconAsterisk100.ts", "../node_modules/@spectrum-web-components/base/src/define-element.ts", "../node_modules/@spectrum-web-components/icons-ui/icons/sp-icon-asterisk100.ts", "../node_modules/@spectrum-web-components/icon/src/spectrum-icon-asterisk.css.ts", "../node_modules/@spectrum-web-components/base/src/condition-attribute-with-id.ts", "../node_modules/@spectrum-web-components/reactive-controllers/src/ElementResolution.ts", "../node_modules/@spectrum-web-components/field-label/src/field-label.css.ts", "../node_modules/@spectrum-web-components/field-label/src/FieldLabel.ts", "../node_modules/@spectrum-web-components/field-label/sp-field-label.ts", "../node_modules/@spectrum-web-components/progress-bar/src/progress-bar.css.ts", "../node_modules/@spectrum-web-components/progress-bar/src/ProgressBar.ts", "../node_modules/@spectrum-web-components/progress-bar/sp-progress-bar.ts", "../node_modules/@sakai-ui/sakai-submission-messager/src/SakaiSubmissionMessager.js", "../node_modules/@sakai-ui/sakai-submission-messager/sakai-submission-messager.js"],
  "sourcesContent": ["// Generated by genversion.\nexport const version = '0.43.0';\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { LitElement, ReactiveElement } from 'lit';\nimport { version } from '@spectrum-web-components/base/src/version.js';\ntype ThemeRoot = HTMLElement & {\n    startManagingContentDirection: (el: HTMLElement) => void;\n    stopManagingContentDirection: (el: HTMLElement) => void;\n};\n\ntype Constructor<T = Record<string, unknown>> = {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    new (...args: any[]): T;\n    prototype: T;\n};\n\nexport interface SpectrumInterface {\n    shadowRoot: ShadowRoot;\n    isLTR: boolean;\n    hasVisibleFocusInTree(): boolean;\n    dir: 'ltr' | 'rtl';\n}\n\nconst observedForElements: Set<HTMLElement> = new Set();\n\nconst updateRTL = (): void => {\n    const dir =\n        document.documentElement.dir === 'rtl'\n            ? document.documentElement.dir\n            : 'ltr';\n    observedForElements.forEach((el) => {\n        el.setAttribute('dir', dir);\n    });\n};\n\nconst rtlObserver = new MutationObserver(updateRTL);\n\nrtlObserver.observe(document.documentElement, {\n    attributes: true,\n    attributeFilter: ['dir'],\n});\n\ntype ContentDirectionManager = HTMLElement & {\n    startManagingContentDirection?(): void;\n};\n\nconst canManageContentDirection = (el: ContentDirectionManager): boolean =>\n    typeof el.startManagingContentDirection !== 'undefined' ||\n    el.tagName === 'SP-THEME';\n\nexport function SpectrumMixin<T extends Constructor<ReactiveElement>>(\n    constructor: T\n): T & Constructor<SpectrumInterface> {\n    class SpectrumMixinElement extends constructor {\n        /**\n         * @private\n         */\n        public override shadowRoot!: ShadowRoot;\n        private _dirParent?: HTMLElement;\n\n        /**\n         * @private\n         */\n        public override dir!: 'ltr' | 'rtl';\n\n        /**\n         * @private\n         */\n        public get isLTR(): boolean {\n            return this.dir === 'ltr';\n        }\n\n        public hasVisibleFocusInTree(): boolean {\n            const getAncestors = (root: Document = document): HTMLElement[] => {\n                // eslint-disable-next-line @spectrum-web-components/document-active-element\n                let currentNode = root.activeElement as HTMLElement;\n                while (\n                    currentNode?.shadowRoot &&\n                    currentNode.shadowRoot.activeElement\n                ) {\n                    currentNode = currentNode.shadowRoot\n                        .activeElement as HTMLElement;\n                }\n                const ancestors: HTMLElement[] = currentNode\n                    ? [currentNode]\n                    : [];\n                while (currentNode) {\n                    const ancestor =\n                        currentNode.assignedSlot ||\n                        currentNode.parentElement ||\n                        (currentNode.getRootNode() as ShadowRoot)?.host;\n                    if (ancestor) {\n                        ancestors.push(ancestor as HTMLElement);\n                    }\n                    currentNode = ancestor as HTMLElement;\n                }\n                return ancestors;\n            };\n            const activeElement = getAncestors(\n                this.getRootNode() as Document\n            )[0];\n            if (!activeElement) {\n                return false;\n            }\n            // Browsers without support for the `:focus-visible`\n            // selector will throw on the following test (Safari, older things).\n            // Some won't throw, but will be focusing item rather than the menu and\n            // will rely on the polyfill to know whether focus is \"visible\" or not.\n            try {\n                return (\n                    activeElement.matches(':focus-visible') ||\n                    activeElement.matches('.focus-visible')\n                );\n                /* c8 ignore next 3 */\n            } catch (error) {\n                return activeElement.matches('.focus-visible');\n            }\n        }\n\n        public override connectedCallback(): void {\n            if (!this.hasAttribute('dir')) {\n                let dirParent = ((this as HTMLElement).assignedSlot ||\n                    this.parentNode) as HTMLElement;\n                while (\n                    dirParent !== document.documentElement &&\n                    !canManageContentDirection(\n                        dirParent as ContentDirectionManager\n                    )\n                ) {\n                    dirParent = ((dirParent as HTMLElement).assignedSlot || // step into the shadow DOM of the parent of a slotted node\n                        dirParent.parentNode || // DOM Element detected\n                        (dirParent as unknown as ShadowRoot)\n                            .host) as HTMLElement;\n                }\n                this.dir =\n                    dirParent.dir === 'rtl' ? dirParent.dir : this.dir || 'ltr';\n                if (dirParent === document.documentElement) {\n                    observedForElements.add(this);\n                } else {\n                    const { localName } = dirParent;\n                    if (\n                        localName.search('-') > -1 &&\n                        !customElements.get(localName)\n                    ) {\n                        /* c8 ignore next 5 */\n                        customElements.whenDefined(localName).then(() => {\n                            (\n                                dirParent as ThemeRoot\n                            ).startManagingContentDirection(this);\n                        });\n                    } else {\n                        (dirParent as ThemeRoot).startManagingContentDirection(\n                            this\n                        );\n                    }\n                }\n                this._dirParent = dirParent as HTMLElement;\n            }\n            super.connectedCallback();\n        }\n\n        public override disconnectedCallback(): void {\n            super.disconnectedCallback();\n            if (this._dirParent) {\n                if (this._dirParent === document.documentElement) {\n                    observedForElements.delete(this);\n                } else {\n                    (this._dirParent as ThemeRoot).stopManagingContentDirection(\n                        this\n                    );\n                }\n                this.removeAttribute('dir');\n            }\n        }\n    }\n    return SpectrumMixinElement;\n}\n\nexport class SpectrumElement extends SpectrumMixin(LitElement) {\n    static VERSION = version;\n}\n\nif (window.__swc.DEBUG) {\n    const ignoreWarningTypes = {\n        default: false,\n        accessibility: false,\n        api: false,\n    };\n    const ignoreWarningLevels = {\n        default: false,\n        low: false,\n        medium: false,\n        high: false,\n        deprecation: false,\n    };\n    window.__swc = {\n        ...window.__swc,\n        ignoreWarningLocalNames: {\n            /* c8 ignore next 1 */\n            ...(window.__swc?.ignoreWarningLocalNames || {}),\n        },\n        ignoreWarningTypes: {\n            ...ignoreWarningTypes,\n            /* c8 ignore next 1 */\n            ...(window.__swc?.ignoreWarningTypes || {}),\n        },\n        ignoreWarningLevels: {\n            ...ignoreWarningLevels,\n            /* c8 ignore next 1 */\n            ...(window.__swc?.ignoreWarningLevels || {}),\n        },\n        issuedWarnings: new Set(),\n        warn: (\n            element,\n            message,\n            url,\n            { type = 'api', level = 'default', issues } = {}\n        ): void => {\n            const { localName = 'base' } = element || {};\n            const id = `${localName}:${type}:${level}` as BrandedSWCWarningID;\n            if (!window.__swc.verbose && window.__swc.issuedWarnings.has(id))\n                return;\n            /* c8 ignore next 3 */\n            if (window.__swc.ignoreWarningLocalNames[localName]) return;\n            if (window.__swc.ignoreWarningTypes[type]) return;\n            if (window.__swc.ignoreWarningLevels[level]) return;\n            window.__swc.issuedWarnings.add(id);\n            let listedIssues = '';\n            if (issues && issues.length) {\n                issues.unshift('');\n                listedIssues = issues.join('\\n    - ') + '\\n';\n            }\n            const intro = level === 'deprecation' ? 'DEPRECATION NOTICE: ' : '';\n            const inspectElement = element\n                ? '\\nInspect this issue in the follow element:'\n                : '';\n            const displayURL = (element ? '\\n\\n' : '\\n') + url + '\\n';\n            const messages: unknown[] = [];\n            messages.push(\n                intro + message + '\\n' + listedIssues + inspectElement\n            );\n            if (element) {\n                messages.push(element);\n            }\n            messages.push(displayURL, {\n                data: {\n                    localName,\n                    type,\n                    level,\n                },\n            });\n            console.warn(...messages);\n        },\n    };\n\n    window.__swc.warn(\n        undefined,\n        'Spectrum Web Components is in dev mode. Not recommended for production!',\n        'https://opensource.adobe.com/spectrum-web-components/dev-mode/',\n        { type: 'default' }\n    );\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {\n  type PropertyDeclaration,\n  type ReactiveElement,\n  defaultConverter,\n  notEqual,\n} from '../reactive-element.js';\nimport type {Interface} from './base.js';\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    (globalThis.litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n}\n\n// Overloads for property decorator so that TypeScript can infer the correct\n// return type when a decorator is used as an accessor decorator or a setter\n// decorator.\nexport type PropertyDecorator = {\n  // accessor decorator signature\n  <C extends Interface<ReactiveElement>, V>(\n    target: ClassAccessorDecoratorTarget<C, V>,\n    context: ClassAccessorDecoratorContext<C, V>\n  ): ClassAccessorDecoratorResult<C, V>;\n\n  // setter decorator signature\n  <C extends Interface<ReactiveElement>, V>(\n    target: (value: V) => void,\n    context: ClassSetterDecoratorContext<C, V>\n  ): (this: C, value: V) => void;\n\n  // legacy decorator signature\n  (\n    protoOrDescriptor: Object,\n    name: PropertyKey,\n    descriptor?: PropertyDescriptor\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): any;\n};\n\nconst legacyProperty = (\n  options: PropertyDeclaration | undefined,\n  proto: Object,\n  name: PropertyKey\n) => {\n  const hasOwnProperty = proto.hasOwnProperty(name);\n  (proto.constructor as typeof ReactiveElement).createProperty(\n    name,\n    hasOwnProperty ? {...options, wrapped: true} : options\n  );\n  // For accessors (which have a descriptor on the prototype) we need to\n  // return a descriptor, otherwise TypeScript overwrites the descriptor we\n  // define in createProperty() with the original descriptor. We don't do this\n  // for fields, which don't have a descriptor, because this could overwrite\n  // descriptor defined by other decorators.\n  return hasOwnProperty\n    ? Object.getOwnPropertyDescriptor(proto, name)\n    : undefined;\n};\n\n// This is duplicated from a similar variable in reactive-element.ts, but\n// actually makes sense to have this default defined with the decorator, so\n// that different decorators could have different defaults.\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual,\n};\n\n// Temporary type, until google3 is on TypeScript 5.2\ntype StandardPropertyContext<C, V> = (\n  | ClassAccessorDecoratorContext<C, V>\n  | ClassSetterDecoratorContext<C, V>\n) & {metadata: object};\n\n/**\n * Wraps a class accessor or setter so that `requestUpdate()` is called with the\n * property name and old value when the accessor is set.\n */\nexport const standardProperty = <C extends Interface<ReactiveElement>, V>(\n  options: PropertyDeclaration = defaultPropertyDeclaration,\n  target: ClassAccessorDecoratorTarget<C, V> | ((value: V) => void),\n  context: StandardPropertyContext<C, V>\n): ClassAccessorDecoratorResult<C, V> | ((this: C, value: V) => void) => {\n  const {kind, metadata} = context;\n\n  if (DEV_MODE && metadata == null) {\n    issueWarning(\n      'missing-class-metadata',\n      `The class ${target} is missing decorator metadata. This ` +\n        `could mean that you're using a compiler that supports decorators ` +\n        `but doesn't support decorator metadata, such as TypeScript 5.1. ` +\n        `Please update your compiler.`\n    );\n  }\n\n  // Store the property options\n  let properties = globalThis.litPropertyMetadata.get(metadata);\n  if (properties === undefined) {\n    globalThis.litPropertyMetadata.set(metadata, (properties = new Map()));\n  }\n  properties.set(context.name, options);\n\n  if (kind === 'accessor') {\n    // Standard decorators cannot dynamically modify the class, so we can't\n    // replace a field with accessors. The user must use the new `accessor`\n    // keyword instead.\n    const {name} = context;\n    return {\n      set(this: ReactiveElement, v: V) {\n        const oldValue = (\n          target as ClassAccessorDecoratorTarget<C, V>\n        ).get.call(this as unknown as C);\n        (target as ClassAccessorDecoratorTarget<C, V>).set.call(\n          this as unknown as C,\n          v\n        );\n        this.requestUpdate(name, oldValue, options);\n      },\n      init(this: ReactiveElement, v: V): V {\n        if (v !== undefined) {\n          this._$changeProperty(name, undefined, options);\n        }\n        return v;\n      },\n    } as unknown as ClassAccessorDecoratorResult<C, V>;\n  } else if (kind === 'setter') {\n    const {name} = context;\n    return function (this: ReactiveElement, value: V) {\n      const oldValue = this[name as keyof ReactiveElement];\n      (target as (value: V) => void).call(this, value);\n      this.requestUpdate(name, oldValue, options);\n    } as unknown as (this: C, value: V) => void;\n  }\n  throw new Error(`Unsupported decorator location: ${kind}`);\n};\n\n/**\n * A class field or accessor decorator which creates a reactive property that\n * reflects a corresponding attribute value. When a decorated property is set\n * the element will update and render. A {@linkcode PropertyDeclaration} may\n * optionally be supplied to configure property features.\n *\n * This decorator should only be used for public fields. As public fields,\n * properties should be considered as primarily settable by element users,\n * either via attribute or the property itself.\n *\n * Generally, properties that are changed by the element should be private or\n * protected fields and should use the {@linkcode state} decorator.\n *\n * However, sometimes element code does need to set a public property. This\n * should typically only be done in response to user interaction, and an event\n * should be fired informing the user; for example, a checkbox sets its\n * `checked` property when clicked and fires a `changed` event. Mutating public\n * properties should typically not be done for non-primitive (object or array)\n * properties. In other cases when an element needs to manage state, a private\n * property decorated via the {@linkcode state} decorator should be used. When\n * needed, state properties can be initialized via public properties to\n * facilitate complex interactions.\n *\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration): PropertyDecorator {\n  return <C extends Interface<ReactiveElement>, V>(\n    protoOrTarget:\n      | object\n      | ClassAccessorDecoratorTarget<C, V>\n      | ((value: V) => void),\n    nameOrContext:\n      | PropertyKey\n      | ClassAccessorDecoratorContext<C, V>\n      | ClassSetterDecoratorContext<C, V>\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): any => {\n    return (\n      typeof nameOrContext === 'object'\n        ? standardProperty<C, V>(\n            options,\n            protoOrTarget as\n              | ClassAccessorDecoratorTarget<C, V>\n              | ((value: V) => void),\n            nameOrContext as StandardPropertyContext<C, V>\n          )\n        : legacyProperty(\n            options,\n            protoOrTarget as Object,\n            nameOrContext as PropertyKey\n          )\n    ) as PropertyDecorator;\n  };\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Generates a public interface type that removes private and protected fields.\n * This allows accepting otherwise incompatible versions of the type (e.g. from\n * multiple copies of the same package in `node_modules`).\n */\nexport type Interface<T> = {\n  [K in keyof T]: T[K];\n};\n\nexport type Constructor<T> = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  new (...args: any[]): T;\n};\n\n/**\n * Wraps up a few best practices when returning a property descriptor from a\n * decorator.\n *\n * Marks the defined property as configurable, and enumerable, and handles\n * the case where we have a busted Reflect.decorate zombiefill (e.g. in Angular\n * apps).\n *\n * @internal\n */\nexport const desc = (\n  obj: object,\n  name: PropertyKey | ClassAccessorDecoratorContext<unknown, unknown>,\n  descriptor: PropertyDescriptor\n) => {\n  // For backwards compatibility, we keep them configurable and enumerable.\n  descriptor.configurable = true;\n  descriptor.enumerable = true;\n  if (\n    // We check for Reflect.decorate each time, in case the zombiefill\n    // is applied via lazy loading some Angular code.\n    (Reflect as typeof Reflect & {decorate?: unknown}).decorate &&\n    typeof name !== 'object'\n  ) {\n    // If we're called as a legacy decorator, and Reflect.decorate is present\n    // then we have no guarantees that the returned descriptor will be\n    // defined on the class, so we must apply it directly ourselves.\n\n    Object.defineProperty(obj, name, descriptor);\n  }\n  return descriptor;\n};\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport type {ReactiveElement} from '../reactive-element.js';\nimport {desc, type Interface} from './base.js';\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    (globalThis.litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n}\n\nexport type QueryDecorator = {\n  // legacy\n  (\n    proto: Interface<ReactiveElement>,\n    name: PropertyKey,\n    descriptor?: PropertyDescriptor\n    // Note TypeScript requires the return type to be `void|any`\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): void | any;\n\n  // standard\n  <C extends Interface<ReactiveElement>, V extends Element | null>(\n    value: ClassAccessorDecoratorTarget<C, V>,\n    context: ClassAccessorDecoratorContext<C, V>\n  ): ClassAccessorDecoratorResult<C, V>;\n};\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n *     once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first: HTMLDivElement;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector: string, cache?: boolean): QueryDecorator {\n  return (<C extends Interface<ReactiveElement>, V extends Element | null>(\n    protoOrTarget: ClassAccessorDecoratorTarget<C, V>,\n    nameOrContext: PropertyKey | ClassAccessorDecoratorContext<C, V>,\n    descriptor?: PropertyDescriptor\n  ) => {\n    const doQuery = (el: Interface<ReactiveElement>): V => {\n      const result = (el.renderRoot?.querySelector(selector) ?? null) as V;\n      if (DEV_MODE && result === null && cache && !el.hasUpdated) {\n        const name =\n          typeof nameOrContext === 'object'\n            ? nameOrContext.name\n            : nameOrContext;\n        issueWarning(\n          '',\n          `@query'd field ${JSON.stringify(String(name))} with the 'cache' ` +\n            `flag set for selector '${selector}' has been accessed before ` +\n            `the first update and returned null. This is expected if the ` +\n            `renderRoot tree has not been provided beforehand (e.g. via ` +\n            `Declarative Shadow DOM). Therefore the value hasn't been cached.`\n        );\n      }\n      // TODO: if we want to allow users to assert that the query will never\n      // return null, we need a new option and to throw here if the result\n      // is null.\n      return result;\n    };\n    if (cache) {\n      // Accessors to wrap from either:\n      //   1. The decorator target, in the case of standard decorators\n      //   2. The property descriptor, in the case of experimental decorators\n      //      on auto-accessors.\n      //   3. Functions that access our own cache-key property on the instance,\n      //      in the case of experimental decorators on fields.\n      const {get, set} =\n        typeof nameOrContext === 'object'\n          ? protoOrTarget\n          : descriptor ??\n            (() => {\n              const key = DEV_MODE\n                ? Symbol(`${String(nameOrContext)} (@query() cache)`)\n                : Symbol();\n              type WithCache = ReactiveElement & {\n                [key: symbol]: Element | null;\n              };\n              return {\n                get() {\n                  return (this as WithCache)[key];\n                },\n                set(v) {\n                  (this as WithCache)[key] = v;\n                },\n              };\n            })();\n      return desc(protoOrTarget, nameOrContext, {\n        get(this: ReactiveElement): V {\n          let result: V = get!.call(this);\n          if (result === undefined) {\n            result = doQuery(this);\n            if (result !== null || this.hasUpdated) {\n              set!.call(this, result);\n            }\n          }\n          return result;\n        },\n      });\n    } else {\n      // This object works as the return type for both standard and\n      // experimental decorators.\n      return desc(protoOrTarget, nameOrContext, {\n        get(this: ReactiveElement) {\n          return doQuery(this);\n        },\n      });\n    }\n  }) as QueryDecorator;\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport type {ReactiveElement} from '../reactive-element.js';\nimport {desc, type Interface} from './base.js';\n\n/**\n * Options for the {@linkcode queryAssignedNodes} decorator. Extends the options\n * that can be passed into [HTMLSlotElement.assignedNodes](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedNodes).\n */\nexport interface QueryAssignedNodesOptions extends AssignedNodesOptions {\n  /**\n   * Name of the slot to query. Leave empty for the default slot.\n   */\n  slot?: string;\n}\n\nexport type QueryAssignedNodesDecorator = {\n  // legacy\n  (\n    proto: Interface<ReactiveElement>,\n    name: PropertyKey,\n    descriptor?: PropertyDescriptor\n    // Note TypeScript requires the return type to be `void|any`\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): void | any;\n\n  // standard\n  <C extends Interface<ReactiveElement>, V extends Array<Node>>(\n    value: ClassAccessorDecoratorTarget<C, V>,\n    context: ClassAccessorDecoratorContext<C, V>\n  ): ClassAccessorDecoratorResult<C, V>;\n};\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given `slot`.\n *\n * Can be passed an optional {@linkcode QueryAssignedNodesOptions} object.\n *\n * Example usage:\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes({slot: 'list', flatten: true})\n *   listItems!: Array<Node>;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n *\n * Note the type of this property should be annotated as `Array<Node>`. Use the\n * queryAssignedElements decorator to list only elements, and optionally filter\n * the element list using a CSS selector.\n *\n * @category Decorator\n */\nexport function queryAssignedNodes(\n  options?: QueryAssignedNodesOptions\n): QueryAssignedNodesDecorator {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (<V extends Array<Node>>(\n    obj: object,\n    name: PropertyKey | ClassAccessorDecoratorContext<unknown, unknown>\n  ) => {\n    const {slot} = options ?? {};\n    const slotSelector = `slot${slot ? `[name=${slot}]` : ':not([name])'}`;\n    return desc(obj, name, {\n      get(this: ReactiveElement): V {\n        const slotEl =\n          this.renderRoot?.querySelector<HTMLSlotElement>(slotSelector);\n        return (slotEl?.assignedNodes(options) ?? []) as unknown as V;\n      },\n    });\n  }) as QueryAssignedNodesDecorator;\n}\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { PropertyValues, ReactiveElement } from 'lit';\nimport { property } from 'lit/decorators.js';\n\ntype Constructor<T = Record<string, unknown>> = {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    new (...args: any[]): T;\n    prototype: T;\n};\n\nexport type ElementSize = 'xxs' | 'xs' | 's' | 'm' | 'l' | 'xl' | 'xxl';\nexport const ElementSizes: Record<string, ElementSize> = {\n    xxs: 'xxs',\n    xs: 'xs',\n    s: 's',\n    m: 'm',\n    l: 'l',\n    xl: 'xl',\n    xxl: 'xxl',\n};\nexport type DefaultElementSize = Exclude<ElementSize, 'xxs' | 'xs' | 'xxl'>;\n\nexport interface SizedElementInterface {\n    size: ElementSize;\n}\n\nexport function SizedMixin<T extends Constructor<ReactiveElement>>(\n    constructor: T,\n    {\n        validSizes = ['s', 'm', 'l', 'xl'],\n        noDefaultSize,\n        defaultSize = 'm',\n    }: {\n        validSizes?: ElementSize[];\n        noDefaultSize?: boolean;\n        defaultSize?: ElementSize;\n    } = {}\n): T & Constructor<SizedElementInterface> {\n    class SizedElement extends constructor {\n        @property({ type: String })\n        public get size(): ElementSize {\n            return this._size || defaultSize;\n        }\n\n        public set size(value: ElementSize) {\n            const fallbackSize = noDefaultSize ? null : defaultSize;\n            const size = (\n                value ? value.toLocaleLowerCase() : value\n            ) as ElementSize;\n            const validSize = (\n                validSizes.includes(size) ? size : fallbackSize\n            ) as ElementSize;\n            if (validSize) {\n                this.setAttribute('size', validSize);\n            }\n            if (this._size === validSize) {\n                return;\n            }\n            const oldSize = this._size;\n            this._size = validSize;\n            this.requestUpdate('size', oldSize);\n        }\n\n        private _size: ElementSize | null = defaultSize;\n\n        protected override update(changes: PropertyValues): void {\n            if (!this.hasAttribute('size') && !noDefaultSize) {\n                this.setAttribute('size', this.size);\n            }\n            super.update(changes);\n        }\n    }\n    return SizedElement;\n}\n", "/*\nCopyright 2022 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nexport const getLabelFromSlot = (\n    label: string,\n    slotEl: HTMLSlotElement\n): string | null => {\n    if (label) return null;\n    const textContent = slotEl\n        .assignedNodes()\n        .reduce((accumulator: string, node: Node) => {\n            if (node.textContent) {\n                return accumulator + node.textContent;\n            } else {\n                return accumulator;\n            }\n        }, '');\n    if (textContent) {\n        return textContent.trim();\n    } else {\n        return null;\n    }\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {isServer} from 'lit-html/is-server.js';\nimport {\n  ReactiveController,\n  ReactiveControllerHost,\n} from '@lit/reactive-element/reactive-controller.js';\n\n/**\n * The callback function for a MutationController.\n */\nexport type MutationValueCallback<T = unknown> = (\n  ...args: Parameters<MutationCallback>\n) => T;\n\n/**\n * The config options for a MutationController.\n */\nexport interface MutationControllerConfig<T = unknown> {\n  /**\n   * Configuration object for the MutationObserver.\n   */\n  config: MutationObserverInit;\n  /**\n   * The element to observe. In addition to configuring the target here,\n   * the `observe` method can be called to observe additional targets. When not\n   * specified, the target defaults to the `host`. If set to `null`, no target\n   * is automatically observed. Only the configured target will be re-observed\n   * if the host connects again after unobserving via disconnection.\n   */\n  target?: Element | null;\n  /**\n   * The callback used to process detected changes into a value stored\n   * in the controller's `value` property.\n   */\n  callback?: MutationValueCallback<T>;\n  /**\n   * By default the `callback` is called without changes when a target is\n   * observed. This is done to help manage initial state, but this\n   * setup step can be skipped by setting this to true.\n   */\n  skipInitial?: boolean;\n}\n\n/**\n * MutationController is a ReactiveController that integrates a MutationObserver\n * with a ReactiveControllerHost's reactive update lifecycle. This is typically\n * a ReactiveElement or LitElement. MutationObservers can be used to detect\n * arbitrary changes to DOM, including nodes being added and remove and\n * attributes changing.\n *\n * The controller can specify a `target` element to observe and the\n * configuration options to pass to the MutationObserver. The `observe`\n * method can be called to observe additional elements.\n *\n * When a change is detected, the controller's given `callback` function is\n * used to process the result into a value which is stored on the controller.\n * The controller's `value` is usable during the host's update cycle.\n */\nexport class MutationController<T = unknown> implements ReactiveController {\n  private _host: ReactiveControllerHost;\n  private _targets = new Set<Element>();\n  private _config: MutationObserverInit;\n  private _observer!: MutationObserver;\n  private _skipInitial = false;\n  /**\n   * Flag used to help manage calling the `callback` when observe is called\n   * in addition to when a mutation occurs. This is done to help setup initial\n   * state and is performed async by requesting a host update and calling\n   * `handleChanges` once by checking and then resetting this flag.\n   */\n  private _unobservedUpdate = false;\n  /**\n   * The result of processing the observer's changes via the `callback`\n   * function.\n   */\n  value?: T;\n  /**\n   * Function that returns a value processed from the observer's changes.\n   * The result is stored in the `value` property.\n   */\n  callback?: MutationValueCallback<T>;\n  constructor(\n    host: ReactiveControllerHost & Element,\n    {target, config, callback, skipInitial}: MutationControllerConfig<T>\n  ) {\n    this._host = host;\n    // Target defaults to `host` unless explicitly `null`.\n    if (target !== null) {\n      this._targets.add(target ?? host);\n    }\n    this._config = config;\n    this._skipInitial = skipInitial ?? this._skipInitial;\n    this.callback = callback;\n    if (isServer) {\n      return;\n    }\n    // Check browser support.\n    if (!window.MutationObserver) {\n      console.warn(\n        `MutationController error: browser does not support MutationObserver.`\n      );\n      return;\n    }\n    this._observer = new MutationObserver((records: MutationRecord[]) => {\n      this.handleChanges(records);\n      this._host.requestUpdate();\n    });\n    host.addController(this);\n  }\n\n  /**\n   * Process the observer's changes with the controller's `callback`\n   * function to produce a result stored in the `value` property.\n   */\n  protected handleChanges(records: MutationRecord[]) {\n    this.value = this.callback?.(records, this._observer);\n  }\n\n  hostConnected() {\n    for (const target of this._targets) {\n      this.observe(target);\n    }\n  }\n\n  hostDisconnected() {\n    this.disconnect();\n  }\n\n  async hostUpdated() {\n    // Eagerly deliver any changes that happened during update.\n    // And handle initial state as a set of 0 changes. This helps setup initial\n    // state and promotes UI = f(state) since ideally the callback does not\n    // rely on changes.\n    const pendingRecords = this._observer.takeRecords();\n    if (\n      pendingRecords.length ||\n      (!this._skipInitial && this._unobservedUpdate)\n    ) {\n      this.handleChanges(pendingRecords);\n    }\n    this._unobservedUpdate = false;\n  }\n\n  /**\n   * Observe the target element. The controller's `target` is automatically\n   * observed when the host connects.\n   * @param target Element to observe\n   */\n  observe(target: Element) {\n    this._targets.add(target);\n    this._observer.observe(target, this._config);\n    this._unobservedUpdate = true;\n    this._host.requestUpdate();\n  }\n\n  /**\n   * Disconnects the observer. This is done automatically when the host\n   * disconnects.\n   */\n  protected disconnect() {\n    this._observer.disconnect();\n  }\n}\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { PropertyValues, ReactiveElement } from '@spectrum-web-components/base';\nimport {\n    property,\n    queryAssignedNodes,\n} from '@spectrum-web-components/base/src/decorators.js';\nimport { MutationController } from '@lit-labs/observers/mutation-controller.js';\n\nconst assignedNodesList = Symbol('assignedNodes');\n\ntype Constructor<T = Record<string, unknown>> = {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    new (...args: any[]): T;\n    prototype: T;\n};\n\nexport interface SlotTextObservingInterface {\n    slotHasContent: boolean;\n    manageTextObservedSlot(): void;\n}\n\nexport function ObserveSlotText<T extends Constructor<ReactiveElement>>(\n    constructor: T,\n    slotName?: string,\n    excludedSelectors: string[] = []\n): T & Constructor<SlotTextObservingInterface> {\n    const notExcluded = (el: HTMLElement) => (selector: string) => {\n        return el.matches(selector);\n    };\n\n    class SlotTextObservingElement\n        extends constructor\n        implements SlotTextObservingInterface\n    {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        constructor(...args: any[]) {\n            super(args);\n\n            new MutationController(this, {\n                config: {\n                    characterData: true,\n                    subtree: true,\n                },\n                callback: (mutationsList: Array<MutationRecord>) => {\n                    for (const mutation of mutationsList) {\n                        if (mutation.type === 'characterData') {\n                            this.manageTextObservedSlot();\n                            return;\n                        }\n                    }\n                },\n            });\n        }\n\n        @property({ type: Boolean, attribute: false })\n        public slotHasContent = false;\n\n        @queryAssignedNodes({\n            slot: slotName,\n            flatten: true,\n        })\n        private [assignedNodesList]!: NodeListOf<HTMLElement>;\n\n        public manageTextObservedSlot(): void {\n            if (!this[assignedNodesList]) return;\n            const assignedNodes = [...this[assignedNodesList]].filter(\n                (currentNode) => {\n                    const node = currentNode as HTMLElement;\n                    if (node.tagName) {\n                        return !excludedSelectors.some(notExcluded(node));\n                    }\n                    return node.textContent ? node.textContent.trim() : false;\n                }\n            );\n            this.slotHasContent = assignedNodes.length > 0;\n        }\n\n        protected override update(changedProperties: PropertyValues): void {\n            if (!this.hasUpdated) {\n                const { childNodes } = this;\n                const textNodes = [...childNodes].filter((currentNode) => {\n                    const node = currentNode as HTMLElement;\n                    if (node.tagName) {\n                        const excluded = excludedSelectors.some(\n                            notExcluded(node)\n                        );\n                        return !excluded\n                            ? // This pass happens at element upgrade and before slot rendering.\n                              // Confirm it would exisit in a targeted slot if there was one supplied.\n                              slotName\n                                ? node.getAttribute('slot') === slotName\n                                : !node.hasAttribute('slot')\n                            : false;\n                    }\n                    return node.textContent ? node.textContent.trim() : false;\n                });\n                this.slotHasContent = textNodes.length > 0;\n            }\n            super.update(changedProperties);\n        }\n\n        protected override firstUpdated(\n            changedProperties: PropertyValues\n        ): void {\n            super.firstUpdated(changedProperties);\n            this.updateComplete.then(() => {\n                this.manageTextObservedSlot();\n            });\n        }\n    }\n    return SlotTextObservingElement;\n}\n", "/*\nCopyright 2022 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport type { ReactiveController, ReactiveElement } from 'lit';\nimport { ProvideLang } from '@spectrum-web-components/theme';\n\nexport const languageResolverUpdatedSymbol = Symbol(\n    'language resolver updated'\n);\n\nexport class LanguageResolutionController implements ReactiveController {\n    private host: ReactiveElement;\n    language = document.documentElement.lang || navigator.language;\n    private unsubscribe?: () => void;\n\n    constructor(host: ReactiveElement) {\n        this.host = host;\n        this.host.addController(this);\n    }\n\n    public hostConnected(): void {\n        this.resolveLanguage();\n    }\n\n    public hostDisconnected(): void {\n        this.unsubscribe?.();\n    }\n\n    private resolveLanguage(): void {\n        const queryThemeEvent = new CustomEvent<ProvideLang>(\n            'sp-language-context',\n            {\n                bubbles: true,\n                composed: true,\n                detail: {\n                    callback: (lang: string, unsubscribe: () => void) => {\n                        const previous = this.language;\n                        this.language = lang;\n                        this.unsubscribe = unsubscribe;\n                        this.host.requestUpdate(\n                            languageResolverUpdatedSymbol,\n                            previous\n                        );\n                    },\n                },\n                cancelable: true,\n            }\n        );\n        this.host.dispatchEvent(queryThemeEvent);\n    }\n}\n", "/*\nCopyright 2024 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\n// This gnarly-looking implementation returns the equivalent of crypto.randomUUID().slice(0, 8).\n// It uses getRandomValues() in order to be compatible with HTTP contexts.\nexport function randomID(): string {\n    return Array.from(crypto.getRandomValues(new Uint8Array(4)), (b) =>\n        `0${(b & 0xff).toString(16)}`.slice(-2)\n    ).join('');\n}\n", "/*\nCopyright 2024 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { css } from '@spectrum-web-components/base';\nconst styles = css`\n    :host{--spectrum-icon-inline-size:var(--mod-icon-inline-size,var(--mod-icon-size,var(--spectrum-icon-size)));--spectrum-icon-block-size:var(--mod-icon-block-size,var(--mod-icon-size,var(--spectrum-icon-size)));inline-size:var(--spectrum-icon-inline-size);block-size:var(--spectrum-icon-block-size);color:var(--mod-icon-color,inherit);fill:currentColor;pointer-events:none;display:inline-block}:host(:not(:root)){overflow:hidden}@media (forced-colors:active){:host{forced-color-adjust:auto}}:host{--spectrum-icon-size:var(--spectrum-workflow-icon-size-100)}:host([size=xxs]){--spectrum-icon-size:var(--spectrum-workflow-icon-size-xxs)}:host([size=xs]){--spectrum-icon-size:var(--spectrum-workflow-icon-size-50)}:host([size=s]){--spectrum-icon-size:var(--spectrum-workflow-icon-size-75)}:host([size=l]){--spectrum-icon-size:var(--spectrum-workflow-icon-size-200)}:host([size=xl]){--spectrum-icon-size:var(--spectrum-workflow-icon-size-300)}:host([size=xxl]){--spectrum-icon-size:var(--spectrum-workflow-icon-size-xxl)}:host{--spectrum-icon-size:inherit;--spectrum-icon-inline-size:var(--mod-icon-inline-size,var(--mod-icon-size,var(--_spectrum-icon-size)));--spectrum-icon-block-size:var(--mod-icon-block-size,var(--mod-icon-size,var(--_spectrum-icon-size)));--_spectrum-icon-size:var(--spectrum-icon-size,var(--spectrum-workflow-icon-size-100))}#container{height:100%}img,svg,::slotted(*){vertical-align:top;color:inherit;width:100%;height:100%}@media (forced-colors:active){img,svg,::slotted(*){forced-color-adjust:auto}}:host([size=xxs]){--_spectrum-icon-size:var(--spectrum-icon-size,var(--spectrum-workflow-icon-size-xxs))}:host([size=xs]){--_spectrum-icon-size:var(--spectrum-icon-size,var(--spectrum-workflow-icon-size-50))}:host([size=s]){--_spectrum-icon-size:var(--spectrum-icon-size,var(--spectrum-workflow-icon-size-75))}:host([size=l]){--_spectrum-icon-size:var(--spectrum-icon-size,var(--spectrum-workflow-icon-size-200))}:host([size=xl]){--_spectrum-icon-size:var(--spectrum-icon-size,var(--spectrum-workflow-icon-size-300))}:host([size=xxl]){--_spectrum-icon-size:var(--spectrum-icon-size,var(--spectrum-workflow-icon-size-xxl))}\n`;\nexport default styles;", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    html,\n    PropertyValues,\n    SpectrumElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\n\nimport iconStyles from './icon.css.js';\n\nexport class IconBase extends SpectrumElement {\n    public static override get styles(): CSSResultArray {\n        return [iconStyles];\n    }\n\n    @property()\n    public label = '';\n\n    @property({ reflect: true })\n    public size?: 'xxs' | 'xs' | 's' | 'm' | 'l' | 'xl' | 'xxl';\n\n    protected override update(changes: PropertyValues): void {\n        if (changes.has('label')) {\n            if (this.label) {\n                this.removeAttribute('aria-hidden');\n            } else {\n                this.setAttribute('aria-hidden', 'true');\n            }\n        }\n        super.update(changes);\n    }\n\n    protected override render(): TemplateResult {\n        return html`\n            <slot></slot>\n        `;\n    }\n}\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { html, TemplateResult } from '@spectrum-web-components/base';\nexport type { TemplateResult };\n\nexport type GenericTemplateLiteralTagType = (\n    strings: TemplateStringsArray,\n    ...values: unknown[]\n) => string;\ntype TemplateLiteralTagType = GenericTemplateLiteralTagType | typeof html;\nlet customTemplateLiteralTag: TemplateLiteralTagType;\n\nexport const tag = function (\n    strings: TemplateStringsArray,\n    ...values: unknown[]\n): string | TemplateResult {\n    if (customTemplateLiteralTag) {\n        return customTemplateLiteralTag(strings, ...values);\n    }\n    return values.reduce(\n        (acc: string, v, idx) =>\n            (acc as string) + (v as string) + strings[idx + 1],\n        strings[0]\n    );\n};\n\nexport const setCustomTemplateLiteralTag = (\n    tag: TemplateLiteralTagType\n): void => {\n    customTemplateLiteralTag = tag;\n};\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { tag as html, TemplateResult } from '../custom-tag.js';\n\nexport { setCustomTemplateLiteralTag } from '../custom-tag.js';\nexport const Asterisk100Icon = ({ width = 24, height = 24, title = 'Asterisk100' } = {}):\n  | string\n  | TemplateResult => {\n  return html`<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 8 8\"\n    aria-hidden=\"true\"\n    role=\"img\"\n    fill=\"currentColor\"\n    aria-label=${title}\n    width=${width}\n    height=${height}\n  >\n    <path\n      d=\"M6.575 6.555c.055.056.092.13 0 .2l-1.149.741c-.092.056-.129.019-.166-.074L3.834 4.94 1.963 7c-.019.036-.074.073-.129 0l-.889-.927c-.093-.055-.074-.111 0-.166l2.111-1.76L.648 3.24c-.037 0-.092-.074-.056-.167l.63-1.259a.097.097 0 0 1 .167-.036L3.5 3.148l.13-2.7a.1.1 0 0 1 .081-.111h.03l1.537.2c.093 0 .111.037.093.13l-.723 2.647 2.445-.741c.055-.037.111-.037.148.074l.241 1.37c.018.093 0 .13-.074.13l-2.556.2z\"\n    />\n  </svg>`;\n};\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { html, TemplateResult } from '@spectrum-web-components/base';\nimport { IconBase } from '@spectrum-web-components/icon';\n\nimport { Asterisk100Icon } from '../icons/Asterisk100.js';\nimport { setCustomTemplateLiteralTag } from '../custom-tag.js';\n\n/**\n * @element sp-icon-asterisk100\n */\nexport class IconAsterisk100 extends IconBase {\n  protected override render(): TemplateResult {\n    setCustomTemplateLiteralTag(html);\n    return Asterisk100Icon() as TemplateResult;\n  }\n}\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\ninterface CustomElementConstructor {\n    new (...params: unknown[]): HTMLElement;\n}\n\nexport function defineElement(\n    name: string,\n    constructor: CustomElementConstructor\n): void {\n    if (window.__swc && window.__swc.DEBUG) {\n        if (customElements.get(name)) {\n            window.__swc.warn(\n                undefined,\n                `Attempted to redefine <${name}>. This usually indicates that multiple versions of the same web component were loaded onto a single page.`,\n                'https://opensource.adobe.com/spectrum-web-components/registry-conflicts'\n            );\n        }\n    }\n    customElements.define(name, constructor);\n}\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { IconAsterisk100 } from '../src/elements/IconAsterisk100.js';\nimport { defineElement } from '@spectrum-web-components/base/src/define-element.js';\n\ndefineElement('sp-icon-asterisk100', IconAsterisk100);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'sp-icon-asterisk100': IconAsterisk100;\n  }\n}\n", "/*\nCopyright 2024 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { css } from '@spectrum-web-components/base';\nconst styles = css`\n    .spectrum-UIIcon-Asterisk75{--spectrum-icon-size:var(--spectrum-asterisk-icon-size-75)}.spectrum-UIIcon-Asterisk100{--spectrum-icon-size:var(--spectrum-asterisk-icon-size-100)}.spectrum-UIIcon-Asterisk200{--spectrum-icon-size:var(--spectrum-asterisk-icon-size-200)}.spectrum-UIIcon-Asterisk300{--spectrum-icon-size:var(--spectrum-asterisk-icon-size-300)}\n`;\nexport default styles;", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nexport function conditionAttributeWithoutId(\n    el: HTMLElement,\n    attribute: string,\n    ids: string[]\n): void {\n    const ariaDescribedby = el.getAttribute(attribute);\n    let descriptors = ariaDescribedby ? ariaDescribedby.split(/\\s+/) : [];\n    descriptors = descriptors.filter(\n        (descriptor) => !ids.find((id) => descriptor === id)\n    );\n    if (descriptors.length) {\n        el.setAttribute(attribute, descriptors.join(' '));\n    } else {\n        el.removeAttribute(attribute);\n    }\n}\n\nexport function conditionAttributeWithId(\n    el: HTMLElement,\n    attribute: string,\n    id: string | string[]\n): () => void {\n    const ids = Array.isArray(id) ? id : [id];\n    const ariaDescribedby = el.getAttribute(attribute);\n    const descriptors = ariaDescribedby ? ariaDescribedby.split(/\\s+/) : [];\n    const hadIds = ids.every((id) => descriptors.indexOf(id) > -1);\n    if (hadIds)\n        /* c8 ignore next 3 */\n        return (): void => {\n            return;\n        };\n    descriptors.push(...ids);\n    el.setAttribute(attribute, descriptors.join(' '));\n    return () => conditionAttributeWithoutId(el, attribute, ids);\n}\n", "/*\nCopyright 2022 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport type { ReactiveController, ReactiveElement } from 'lit';\nexport const elementResolverUpdatedSymbol = Symbol('element resolver updated');\n\nexport class ElementResolutionController implements ReactiveController {\n    get element(): HTMLElement | null {\n        return this._element;\n    }\n\n    set element(element: HTMLElement | null) {\n        if (element === this.element) return;\n        const previous = this.element;\n        this._element = element;\n        // requestUpdate leveraging the exported Symbol() so that the\n        // changes can be easily tracked in the host element.\n        this.host.requestUpdate(elementResolverUpdatedSymbol, previous);\n    }\n\n    private _element: HTMLElement | null = null;\n\n    private host!: ReactiveElement;\n\n    private observer!: MutationObserver;\n\n    get selector(): string {\n        return this._selector;\n    }\n\n    set selector(selector: string) {\n        if (selector === this.selector) return;\n        this.releaseElement();\n        this._selector = selector;\n        this.resolveElement();\n    }\n\n    private _selector = '';\n\n    get selectorAsId(): string {\n        return this.selector.slice(1);\n    }\n\n    get selectorIsId(): boolean {\n        return !!this.selector && this.selector.startsWith('#');\n    }\n\n    constructor(\n        host: ReactiveElement,\n        { selector }: { selector: string } = { selector: '' }\n    ) {\n        this.host = host;\n        this.selector = selector;\n        this.observer = new MutationObserver(this.mutationCallback);\n        // Add the controller after the MutationObserver has been created in preparation\n        // for the `hostConnected`/`hostDisconnected` callbacks to be run.\n        this.host.addController(this);\n    }\n\n    protected mutationCallback: MutationCallback = (mutationList) => {\n        let needsResolution = false;\n        mutationList.forEach((mutation) => {\n            if (needsResolution) return;\n            if (mutation.type === 'childList') {\n                const currentElementRemoved =\n                    this.element &&\n                    [...mutation.removedNodes].includes(this.element);\n                const matchingElementAdded =\n                    !!this.selector &&\n                    ([...mutation.addedNodes] as HTMLElement[]).some(\n                        this.elementIsSelected\n                    );\n                needsResolution =\n                    needsResolution ||\n                    currentElementRemoved ||\n                    matchingElementAdded;\n            }\n            if (mutation.type === 'attributes') {\n                const attributeChangedOnCurrentElement =\n                    mutation.target === this.element;\n                const attributeChangedOnMatchingElement =\n                    !!this.selector &&\n                    this.elementIsSelected(mutation.target as HTMLElement);\n                needsResolution =\n                    needsResolution ||\n                    attributeChangedOnCurrentElement ||\n                    attributeChangedOnMatchingElement;\n            }\n        });\n        if (needsResolution) {\n            this.resolveElement();\n        }\n    };\n\n    public hostConnected(): void {\n        this.resolveElement();\n        this.observer.observe(this.host.getRootNode(), {\n            subtree: true,\n            childList: true,\n            attributes: true,\n        });\n    }\n\n    public hostDisconnected(): void {\n        this.releaseElement();\n        this.observer.disconnect();\n    }\n\n    private resolveElement(): void {\n        if (!this.selector) {\n            this.releaseElement();\n            return;\n        }\n\n        const parent = this.host.getRootNode() as ShadowRoot;\n        this.element = this.selectorIsId\n            ? (parent.getElementById(this.selectorAsId) as HTMLElement)\n            : (parent.querySelector(this.selector) as HTMLElement);\n    }\n\n    private releaseElement(): void {\n        this.element = null;\n    }\n\n    private elementIsSelected = (el: HTMLElement): boolean => {\n        return this.selectorIsId\n            ? el?.id === this.selectorAsId\n            : el?.matches?.(this.selector);\n    };\n}\n", "/*\nCopyright 2024 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { css } from '@spectrum-web-components/base';\nconst styles = css`\n    :host{--spectrum-fieldlabel-min-height:var(--spectrum-component-height-75);--spectrum-fieldlabel-color:var(--spectrum-neutral-subdued-content-color-default);--spectrum-field-label-text-to-asterisk:var(--spectrum-field-label-text-to-asterisk-medium);--spectrum-fieldlabel-font-weight:var(--spectrum-regular-font-weight);--spectrum-fieldlabel-line-height:var(--spectrum-line-height-100);--spectrum-fieldlabel-line-height-cjk:var(--spectrum-cjk-line-height-100)}:host([size=s]){--spectrum-fieldlabel-min-height:var(--spectrum-component-height-75);--spectrum-fieldlabel-top-to-text:var(--spectrum-component-top-to-text-75);--spectrum-fieldlabel-bottom-to-text:var(--spectrum-component-bottom-to-text-75);--spectrum-fieldlabel-font-size:var(--spectrum-font-size-75);--spectrum-fieldlabel-side-margin-block-start:var(--spectrum-field-label-top-margin-small);--spectrum-fieldlabel-side-padding-right:var(--spectrum-spacing-100);--spectrum-field-label-text-to-asterisk:var(--spectrum-field-label-text-to-asterisk-small)}:host{--spectrum-fieldlabel-min-height:var(--spectrum-component-height-75);--spectrum-fieldlabel-top-to-text:var(--spectrum-component-top-to-text-75);--spectrum-fieldlabel-bottom-to-text:var(--spectrum-component-bottom-to-text-75);--spectrum-fieldlabel-font-size:var(--spectrum-font-size-75);--spectrum-fieldlabel-side-margin-block-start:var(--spectrum-field-label-top-margin-medium);--spectrum-fieldlabel-side-padding-right:var(--spectrum-spacing-200);--spectrum-field-label-text-to-asterisk:var(--spectrum-field-label-text-to-asterisk-medium)}:host([size=l]){--spectrum-fieldlabel-min-height:var(--spectrum-component-height-100);--spectrum-fieldlabel-top-to-text:var(--spectrum-component-top-to-text-100);--spectrum-fieldlabel-bottom-to-text:var(--spectrum-component-bottom-to-text-100);--spectrum-fieldlabel-font-size:var(--spectrum-font-size-100);--spectrum-fieldlabel-side-margin-block-start:var(--spectrum-field-label-top-margin-large);--spectrum-fieldlabel-side-padding-right:var(--spectrum-spacing-200);--spectrum-field-label-text-to-asterisk:var(--spectrum-field-label-text-to-asterisk-large)}:host([size=xl]){--spectrum-fieldlabel-min-height:var(--spectrum-component-height-200);--spectrum-fieldlabel-top-to-text:var(--spectrum-component-top-to-text-200);--spectrum-fieldlabel-bottom-to-text:var(--spectrum-component-bottom-to-text-200);--spectrum-fieldlabel-font-size:var(--spectrum-font-size-200);--spectrum-fieldlabel-side-margin-block-start:var(--spectrum-field-label-top-margin-extra-large);--spectrum-fieldlabel-side-padding-right:var(--spectrum-spacing-200);--spectrum-field-label-text-to-asterisk:var(--spectrum-field-label-text-to-asterisk-extra-large)}:host{box-sizing:border-box;min-block-size:var(--mod-fieldlabel-min-height,var(--spectrum-fieldlabel-min-height));padding-block:var(--mod-field-label-top-to-text,var(--spectrum-fieldlabel-top-to-text))var(--mod-field-label-bottom-to-text,var(--spectrum-fieldlabel-bottom-to-text));font-size:var(--mod-fieldlabel-font-size,var(--spectrum-fieldlabel-font-size));font-weight:var(--mod-fieldlabel-font-weight,var(--spectrum-fieldlabel-font-weight));line-height:var(--mod-fieldlabel-line-height,var(--spectrum-fieldlabel-line-height));-webkit-font-smoothing:subpixel-antialiased;-moz-osx-font-smoothing:auto;color:var(--spectrum-fieldlabel-color);padding-inline:0;display:block}:host(:lang(ja)),:host(:lang(ko)),:host(:lang(zh)){line-height:var(--mod-fieldlabel-line-height-cjk,var(--spectrum-fieldlabel-line-height-cjk))}.required-icon{margin-block:0;margin-inline:var(--mod-field-label-text-to-asterisk,var(--spectrum-field-label-text-to-asterisk))0;vertical-align:var(--mod-field-label-asterisk-vertical-align,baseline)}:host([side-aligned=start]),:host([side-aligned=end]){vertical-align:top;margin-block-start:var(--mod-fieldlabel-side-margin-block-start,var(--spectrum-fieldlabel-side-margin-block-start));margin-block-end:0;margin-inline-end:var(--mod-fieldlabel-side-padding-right,var(--spectrum-fieldlabel-side-padding-right));display:inline-block}:host([side-aligned=end]){text-align:end}:host([disabled]),:host([disabled]) .required-icon{color:var(--highcontrast-disabled-content-color,var(--mod-disabled-content-color,var(--spectrum-disabled-content-color)))}@media (forced-colors:active){:host{--highcontrast-disabled-content-color:GrayText}}label{display:inline-block}\n`;\nexport default styles;", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    html,\n    nothing,\n    PropertyValues,\n    SizedMixin,\n    SpectrumElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport {\n    property,\n    query,\n} from '@spectrum-web-components/base/src/decorators.js';\nimport type { Focusable } from '@spectrum-web-components/shared';\nimport { randomID } from '@spectrum-web-components/shared/src/random-id.js';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-asterisk100.js';\nimport asteriskIconStyles from '@spectrum-web-components/icon/src/spectrum-icon-asterisk.css.js';\nimport {\n    conditionAttributeWithId,\n    conditionAttributeWithoutId,\n} from '@spectrum-web-components/base/src/condition-attribute-with-id.js';\nimport {\n    ElementResolutionController,\n    elementResolverUpdatedSymbol,\n} from '@spectrum-web-components/reactive-controllers/src/ElementResolution.js';\n\nimport styles from './field-label.css.js';\n\ntype AcceptsFocusVisisble = HTMLElement & { forceFocusVisible?(): void };\ntype Labelable = Focusable & {\n    applyFocusElementLabel?: (\n        appliedLabel: string,\n        labelElement?: FieldLabel\n    ) => void;\n};\n\n/**\n * @element sp-field-label\n *\n * @slot - text content of the label\n */\nexport class FieldLabel extends SizedMixin(SpectrumElement, {\n    noDefaultSize: true,\n}) {\n    public static override get styles(): CSSResultArray {\n        return [styles, asteriskIconStyles];\n    }\n\n    @property({ type: Boolean, reflect: true })\n    public disabled = false;\n\n    @property({ type: String })\n    public override id = '';\n\n    @property({ type: String })\n    public for = '';\n\n    @property({ type: Boolean, reflect: true })\n    public required = false;\n\n    @query('slot')\n    public slotEl!: HTMLSlotElement;\n\n    @property({ type: String, reflect: true, attribute: 'side-aligned' })\n    public sideAligned?: 'start' | 'end';\n\n    private target?: Labelable;\n\n    private handleClick(event: Event): void {\n        if (!this.target || this.disabled || event.defaultPrevented) return;\n        this.target.focus();\n        const parent = this.getRootNode() as ShadowRoot;\n        const target = this.target as AcceptsFocusVisisble;\n        const targetParent = target.getRootNode() as ShadowRoot;\n        const targetHost = targetParent.host as AcceptsFocusVisisble;\n        if (targetParent === parent && target.forceFocusVisible) {\n            target.forceFocusVisible();\n        } else if (targetHost && targetHost.forceFocusVisible) {\n            targetHost.forceFocusVisible();\n        }\n    }\n\n    private resolvedElement = new ElementResolutionController(this);\n\n    private applyTargetLabel(target?: Labelable): void {\n        // Apply new target when provided\n        this.target = target || this.target;\n        if (this.target) {\n            // When target is available add or remove label information\n            // depending on the value of `apply`.\n            const applyLabel = this.target.applyFocusElementLabel;\n            const focusable = this.target.focusElement || this.target;\n            const targetParent = focusable.getRootNode() as HTMLElement;\n            if (typeof applyLabel !== 'undefined') {\n                applyLabel(this.labelText, this);\n            } else if (targetParent === (this.getRootNode() as HTMLElement)) {\n                const conditionAttribute = target\n                    ? conditionAttributeWithId\n                    : conditionAttributeWithoutId;\n                conditionAttribute(focusable, 'aria-labelledby', [this.id]);\n            } else {\n                if (target) {\n                    focusable.setAttribute('aria-label', this.labelText);\n                } else {\n                    focusable.removeAttribute('aria-label');\n                }\n            }\n        }\n    }\n\n    private async manageTarget(): Promise<void> {\n        this.applyTargetLabel();\n        const target = this.resolvedElement.element as Focusable;\n        if (!target) {\n            this.target = target;\n            return;\n        }\n        if (target.localName.search('-') > 0) {\n            await customElements.whenDefined(target.localName);\n        }\n        if (typeof target.updateComplete !== 'undefined') {\n            await target.updateComplete;\n        }\n        this.applyTargetLabel(target);\n    }\n\n    private get labelText(): string {\n        const assignedNodes = this.slotEl.assignedNodes({ flatten: true });\n        if (!assignedNodes.length) {\n            return '';\n        }\n        const labelText = assignedNodes.map((node) =>\n            (node.textContent || /* c8 ignore next */ '').trim()\n        );\n        return labelText.join(' ');\n    }\n\n    protected override render(): TemplateResult {\n        return html`\n            <label>\n                <slot></slot>\n                ${this.required\n                    ? html`\n                          <sp-icon-asterisk100\n                              class=\"required-icon spectrum-UIIcon-Asterisk100\"\n                          ></sp-icon-asterisk100>\n                      `\n                    : nothing}\n            </label>\n        `;\n    }\n\n    protected override firstUpdated(changes: PropertyValues): void {\n        super.firstUpdated(changes);\n        this.addEventListener('click', this.handleClick);\n    }\n\n    protected override willUpdate(changes: PropertyValues): void {\n        if (!this.hasAttribute('id')) {\n            this.setAttribute(\n                'id',\n                `${this.tagName.toLowerCase()}-${randomID()}`\n            );\n        }\n        if (changes.has('for')) {\n            this.resolvedElement.selector = this.for ? `#${this.for}` : '';\n        }\n        if (changes.has('id') || changes.has(elementResolverUpdatedSymbol)) {\n            this.manageTarget();\n        }\n    }\n}\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { FieldLabel } from './src/FieldLabel.js';\nimport { defineElement } from '@spectrum-web-components/base/src/define-element.js';\n\ndefineElement('sp-field-label', FieldLabel);\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'sp-field-label': FieldLabel;\n    }\n}\n", "/*\nCopyright 2024 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { css } from '@spectrum-web-components/base';\nconst styles = css`\n    :host{--spectrum-progressbar-animation-ease-in-out-indeterminate:var(--spectrum-animation-ease-in-out);--spectrum-progressbar-animation-duration-indeterminate:var(--spectrum-animation-duration-2000);--spectrum-progressbar-corner-radius:var(--spectrum-corner-radius-100);--spectrum-progressbar-fill-size-indeterminate:70%;--spectrum-progressbar-size-2400:192px;--spectrum-progressbar-size-2500:200px;--spectrum-progressbar-size-2800:224px;--spectrum-progressbar-font-size:var(--spectrum-font-size-75);--spectrum-progressbar-line-height-cjk:var(--spectrum-cjk-line-height-100);--spectrum-progressbar-min-size:var(--spectrum-progress-bar-minimum-width);--spectrum-progressbar-max-size:var(--spectrum-progress-bar-maximum-width);--spectrum-progressbar-thickness:var(--spectrum-progress-bar-thickness-medium);--spectrum-progressbar-line-height:var(--spectrum-line-height-100);--spectrum-progressbar-spacing-label-to-progressbar:var(--spectrum-spacing-75);--spectrum-progressbar-spacing-top-to-text:var(--spectrum-component-top-to-text-100);--spectrum-progressbar-spacing-label-to-text:var(--spectrum-spacing-200);--spectrum-progressbar-text-color:var(--spectrum-neutral-content-color-default);--spectrum-progressbar-track-color:var(--spectrum-gray-300);--spectrum-progressbar-fill-color:var(--spectrum-accent-color-900);--spectrum-progressbar-fill-color-positive:var(--spectrum-positive-visual-color);--spectrum-progressbar-fill-color-notice:var(--spectrum-notice-visual-color);--spectrum-progressbar-fill-color-negative:var(--spectrum-negative-visual-color);--spectrum-progressbar-label-and-value-white:var(--spectrum-white);--spectrum-progressbar-track-color-white:var(--spectrum-transparent-white-300);--spectrum-progressbar-fill-color-white:var(--spectrum-white);--spectrum-meter-min-width:var(--spectrum-meter-minimum-width);--spectrum-meter-max-width:var(--spectrum-meter-maximum-width);--spectrum-meter-inline-size:var(--spectrum-meter-default-width);--spectrum-meter-thickness-s:var(--spectrum-meter-thickness-small);--spectrum-meter-thickness-l:var(--spectrum-meter-thickness-large);--spectrum-meter-top-to-text:var(--spectrum-component-top-to-text)}:host([size=s]){--spectrum-progressbar-size-default:var(--spectrum-progressbar-size-2400);--spectrum-progressbar-font-size:var(--spectrum-font-size-75);--spectrum-progressbar-thickness:var(--spectrum-progress-bar-thickness-small);--spectrum-progressbar-spacing-top-to-text:var(--spectrum-component-top-to-text-75)}:host{--spectrum-progressbar-size-default:var(--spectrum-progressbar-size-2400);--spectrum-progressbar-font-size:var(--spectrum-font-size-75);--spectrum-progressbar-thickness:var(--spectrum-progress-bar-thickness-large);--spectrum-progressbar-spacing-top-to-text:var(--spectrum-component-top-to-text-75)}:host([size=l]){--spectrum-progressbar-size-default:var(--spectrum-progressbar-size-2500);--spectrum-progressbar-font-size:var(--spectrum-font-size-100);--spectrum-progressbar-thickness:var(--spectrum-progress-bar-thickness-large);--spectrum-progressbar-spacing-top-to-text:var(--spectrum-component-top-to-text-200)}:host([size=xl]){--spectrum-progressbar-size-default:var(--spectrum-progressbar-size-2800);--spectrum-progressbar-font-size:var(--spectrum-font-size-200);--spectrum-progressbar-thickness:var(--spectrum-progress-bar-thickness-extra-large);--spectrum-progressbar-spacing-top-to-text:var(--spectrum-component-top-to-text-300)}.spectrum-Meter{--spectrum-progressbar-size-default:var(--mod-meter-inline-size,var(--spectrum-meter-inline-size));--spectrum-progressbar-max-size:var(--mod-meter-max-width,var(--spectrum-meter-max-width));--spectrum-progressbar-min-size:var(--mod-meter-min-width,var(--spectrum-meter-min-width))}:host([positive]) .spectrum-Meter .fill{background-color:var(--highcontrast-progressbar-fill-color,var(--mod-progressbar-fill-color-positive,var(--spectrum-progressbar-fill-color-positive)))}:host([notice]) .spectrum-Meter .fill{background-color:var(--highcontrast-progressbar-fill-color,var(--mod-progressbar-fill-color-notice,var(--spectrum-progressbar-fill-color-notice)))}:host([negative]) .spectrum-Meter .fill{background-color:var(--highcontrast-progressbar-fill-color,var(--mod-progressbar-fill-color-negative,var(--spectrum-progressbar-fill-color-negative)))}:host{font-size:var(--mod-progressbar-font-size,var(--spectrum-progressbar-font-size));vertical-align:top;inline-size:var(--mod-progressbar-size-default,var(--spectrum-progressbar-size-default));max-inline-size:var(--mod-progressbar-max-size,var(--spectrum-progressbar-max-size));min-inline-size:var(--mod-progressbar-min-size,var(--spectrum-progressbar-min-size));flex-flow:wrap;justify-content:space-between;align-items:center;display:inline-flex;position:relative}.label,.percentage{text-align:start;line-height:var(--mod-progressbar-line-height,var(--spectrum-progressbar-line-height));color:var(--mod-progressbar-text-color,var(--spectrum-progressbar-text-color));margin-block-start:var(--mod-progressbar-spacing-top-to-text,var(--spectrum-progressbar-spacing-top-to-text));margin-block-end:var(--mod-progressbar-spacing-label-to-progressbar,var(--spectrum-progressbar-spacing-label-to-progressbar))}.label:lang(ja),.label:lang(ko),.label:lang(zh),.percentage:lang(ja),.percentage:lang(ko),.percentage:lang(zh){line-height:var(--mod-progressbar-line-height-cjk,var(--spectrum-progressbar-line-height-cjk))}.label{flex:1}.percentage{align-self:flex-start;margin-inline-start:var(--mod-progressbar-spacing-label-to-text,var(--spectrum-progressbar-spacing-label-to-text))}.track{block-size:var(--mod-progressbar-thickness,var(--spectrum-progressbar-thickness));border-radius:var(--spectrum-progressbar-corner-radius);background-color:var(--highcontrast-progressbar-track-color,var(--mod-progressbar-track-color,var(--spectrum-progressbar-track-color)));inline-size:100%;overflow:hidden}.fill{block-size:var(--mod-progressbar-thickness,var(--spectrum-progressbar-thickness));background-color:var(--highcontrast-progressbar-fill-color,var(--mod-progressbar-fill-color,var(--spectrum-progressbar-fill-color)));border:none;transition:width 1s}:host([indeterminate]) .fill{inline-size:var(--mod-progressbar-fill-size-indeterminate,var(--spectrum-progressbar-fill-size-indeterminate));animation-timing-function:var(--mod-progressbar-animation-ease-in-out-indeterminate,var(--spectrum-progressbar-animation-ease-in-out-indeterminate));will-change:transform;position:relative}:host([side-label]){flex-flow:row;justify-content:space-between;display:inline-flex}:host([side-label]) .track{flex:1 1 var(--mod-progressbar-size-default,var(--spectrum-progressbar-size-default))}:host([side-label]) .label{flex-grow:0;margin-block-end:0;margin-inline-end:var(--mod-progressbar-spacing-label-to-text,var(--spectrum-progressbar-spacing-label-to-text))}:host([side-label]) .percentage{text-align:end;order:3;margin-block-end:0;margin-inline-start:var(--mod-spacing-progressbar-label-to-text,var(--spectrum-progressbar-spacing-label-to-text))}:host([static=white]) .fill{background-color:var(--mod-progressbar-fill-color-white,var(--spectrum-progressbar-fill-color-white))}:host([static=white]) .fill,:host([static=white]) .label,:host([static=white]) .percentage{color:var(--mod-progressbar-label-and-value-white,var(--spectrum-progressbar-label-and-value-white))}:host([static=white]) .track{background-color:var(--spectrum-progressbar-track-color-white)}:host([indeterminate]) .fill{animation:a var(--mod-progressbar-animation-duration-indeterminate,var(--spectrum-progressbar-animation-duration-indeterminate))infinite}:host([indeterminate]) .fill:dir(rtl),:host([dir=rtl][indeterminate]) .fill{animation:b var(--mod-progressbar-animation-duration-indeterminate,var(--spectrum-progressbar-animation-duration-indeterminate))infinite}@keyframes a{0%{transform:translate(calc(var(--mod-progressbar-fill-size-indeterminate,var(--spectrum-progressbar-fill-size-indeterminate))*-1))}to{transform:translate(var(--mod-progressbar-size-default,var(--spectrum-progressbar-size-default)))}}@keyframes b{0%{transform:translate(var(--mod-progressbar-size-default,var(--spectrum-progressbar-fill-size-indeterminate)))}to{transform:translate(calc(var(--mod-progressbar-size-default,var(--spectrum-progressbar-size-default))*-1))}}@media (forced-colors:active){.track{forced-color-adjust:none;--highcontrast-progressbar-fill-color:ButtonText;--highcontrast-progressbar-track-color:ButtonFace;border:1px solid buttontext}}.fill{transform-origin:0;width:100%}:host([dir=rtl]) .fill{transform-origin:100%}\n`;\nexport default styles;", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    html,\n    nothing,\n    PropertyValues,\n    SizedMixin,\n    SpectrumElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport {\n    property,\n    query,\n} from '@spectrum-web-components/base/src/decorators.js';\n\nimport { getLabelFromSlot } from '@spectrum-web-components/shared/src/get-label-from-slot.js';\nimport { ObserveSlotText } from '@spectrum-web-components/shared/src/observe-slot-text.js';\nimport { LanguageResolutionController } from '@spectrum-web-components/reactive-controllers/src/LanguageResolution.js';\nimport '@spectrum-web-components/field-label/sp-field-label.js';\nimport styles from './progress-bar.css.js';\n\n/**\n * @element sp-progress-bar\n */\nexport class ProgressBar extends SizedMixin(\n    ObserveSlotText(SpectrumElement, ''),\n    {\n        noDefaultSize: true,\n    }\n) {\n    public static override get styles(): CSSResultArray {\n        return [styles];\n    }\n\n    @property({ type: Boolean, reflect: true })\n    public indeterminate = false;\n\n    @property({ type: String, reflect: true })\n    public label = '';\n\n    private languageResolver = new LanguageResolutionController(this);\n\n    @property({ type: Boolean, reflect: true, attribute: 'over-background' })\n    public overBackground = false;\n\n    @property({ type: Boolean, reflect: true, attribute: 'side-label' })\n    public sideLabel = false;\n\n    @property({ type: Number })\n    public progress = 0;\n\n    @property({ type: String, reflect: true })\n    public static: 'white' | undefined;\n\n    @query('slot')\n    private slotEl!: HTMLSlotElement;\n\n    protected override render(): TemplateResult {\n        return html`\n            ${this.slotHasContent || this.label\n                ? html`\n                      <sp-field-label size=${this.size} class=\"label\">\n                          ${this.slotHasContent ? html`` : this.label}\n                          <slot @slotchange=${this.handleSlotchange}>\n                              ${this.label}\n                          </slot>\n                      </sp-field-label>\n                  `\n                : html``}\n            ${this.label\n                ? html`\n                      ${this.indeterminate\n                          ? nothing\n                          : html`\n                                <sp-field-label\n                                    size=${this.size}\n                                    class=\"percentage\"\n                                >\n                                    ${new Intl.NumberFormat(\n                                        this.languageResolver.language,\n                                        {\n                                            style: 'percent',\n                                            unitDisplay: 'narrow',\n                                        }\n                                    ).format(this.progress / 100)}\n                                </sp-field-label>\n                            `}\n                  `\n                : nothing}\n            <div class=\"track\">\n                <div\n                    class=\"fill\"\n                    style=\"transform: scaleX(calc(${this.progress} / 100));\"\n                ></div>\n            </div>\n        `;\n    }\n\n    protected handleSlotchange(): void {\n        const labelFromSlot = getLabelFromSlot(this.label, this.slotEl);\n        if (labelFromSlot) {\n            this.label = labelFromSlot;\n        }\n    }\n\n    protected override firstUpdated(changes: PropertyValues): void {\n        super.firstUpdated(changes);\n        if (!this.hasAttribute('role')) {\n            this.setAttribute('role', 'progressbar');\n        }\n    }\n\n    protected override updated(changes: PropertyValues): void {\n        super.updated(changes);\n        if (changes.has('indeterminate')) {\n            if (this.indeterminate) {\n                this.removeAttribute('aria-valuemin');\n                this.removeAttribute('aria-valuemax');\n                this.removeAttribute('aria-valuenow');\n            } else {\n                this.setAttribute('aria-valuemin', '0');\n                this.setAttribute('aria-valuemax', '100');\n            }\n        }\n        if (!this.indeterminate && changes.has('progress')) {\n            this.setAttribute('aria-valuenow', '' + this.progress);\n        }\n        if (changes.has('label')) {\n            if (this.label.length) {\n                this.setAttribute('aria-label', this.label);\n            } else if (\n                changes.get('label') === this.getAttribute('aria-label')\n            ) {\n                this.removeAttribute('aria-label');\n            }\n        }\n\n        if (window.__swc.DEBUG) {\n            if (\n                !this.label &&\n                !this.getAttribute('aria-label') &&\n                !this.getAttribute('aria-labelledby') &&\n                !this.slotHasContent\n            ) {\n                window.__swc.warn(\n                    this,\n                    '<sp-progress-bar> elements need one of the following to be accessible:',\n                    'https://opensource.adobe.com/spectrum-web-components/components/progress-bar/#accessibility',\n                    {\n                        type: 'accessibility',\n                        issues: [\n                            'value supplied to the \"label\" attribute, which will be displayed visually as part of the element, or',\n                            'text content supplied directly to the <sp-progress-circle> element, or',\n                            'value supplied to the \"aria-label\" attribute, which will only be provided to screen readers, or',\n                            'an element ID reference supplied to the \"aria-labelledby\" attribute, which will be provided by screen readers and will need to be managed manually by the parent application.',\n                        ],\n                    }\n                );\n            }\n        }\n    }\n}\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { ProgressBar } from './src/ProgressBar.js';\nimport { defineElement } from '@spectrum-web-components/base/src/define-element.js';\n\ndefineElement('sp-progress-bar', ProgressBar);\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'sp-progress-bar': ProgressBar;\n    }\n}\n", "import { SakaiElement } from \"@sakai-ui/sakai-element\";\nimport { html, nothing } from \"lit\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport \"@sakai-ui/sakai-group-picker\";\nimport \"@spectrum-web-components/progress-bar/sp-progress-bar.js\";\n\nexport class SakaiSubmissionMessager extends SakaiElement {\n\n  static properties = {\n\n    assignmentId: { attribute: \"assignment-id\", type: String },\n    groups: { type: Array },\n    title: String,\n    action: String,\n    subject: String,\n    body: String,\n    error: Boolean,\n    success: Boolean,\n    groupId: String,\n    validationError: String,\n    recipientsToCheck: Array,\n    sending: Boolean,\n    i18n: Object,\n  };\n\n  constructor() {\n\n    super();\n\n    this.groups = [];\n    this.recipientsToCheck = [];\n    this.i18n = {};\n    this.group = `/site/${portal.siteId}`;\n    this.reset();\n    this.loadTranslations(\"submission-messager\").then(t => this.i18n = t);\n  }\n\n  shouldUpdate() {\n    return this.i18n;\n  }\n\n  render() {\n\n    return html`\n      <div id=\"submission-messager-${this.assignmentId}\" class=\"submission-messager\">\n        <div class=\"sak-banner-error\" style=\"display: ${this.validationError ? \"block\" : \"none\"}\">\n          ${this.validationError}\n        </div>\n        <div class=\"sm-title\">${this.title}</div>\n        <div class=\"sm-block\">\n          <span id=\"sm-subject-label-${this.assignmentId}\" class=\"sm-label\">${this.i18n.subject}</span>\n          <input class=\"subject-input\" aria-labelledby=\"sm-subject-label-${this.assignmentId}\"\n                  type=\"text\" .value=${this.subject} @change=${e => this.subject = e.target.value}\n                  placeholder=\"${this.i18n.subject_placeholder}\"/>\n          <div id=\"sm-body-label-${this.assignmentId}\" class=\"sm-label\">${this.i18n.message}</div>\n          <textarea aria-labelledby=\"sm-body-label-${this.assignmentId}\" .value=${this.body} class=\"message-input\" @change=${e => this.body = e.target.value}>${this.body}</textarea>\n        </div>\n        <div class=\"sm-block\">\n          <span id=\"sm-action-selector-label-${this.assignmentId}\" class=\"sm-label\">${this.i18n.select_action}</span>\n          <select aria-labelledby=\"sm-action-selector-label-${this.assignmentId}\" class=\"group-select\" @change=${this.actionChanged}>\n            <option value=\"1\" ?selected=${this.action === \"1\"}>${this.i18n.ungraded_students}</option>\n            <option value=\"2\">${this.i18n.graded_students}</option>\n            <option value=\"3\">${this.i18n.all_students}</option>\n          </select>\n        </div>\n        <div class=\"sm-score-block\" style=\"display: ${this.action === \"2\" ? \"block\" : \"none\"}\">\n          <div><label>${this.i18n.min_score_label}<input type=\"text\" size=\"6\" @input=${this.minScoreChanged} /></label></div>\n          <div><label>${this.i18n.max_score_label}<input type=\"text\" size=\"6\" @input=${this.maxScoreChanged} /></label></div>\n        </div>\n        <div class=\"sm-block\">\n          <span id=\"sm-group-selector-label-${this.assignmentId}\" class=\"sm-label\">${this.i18n.select_group}</span>\n          <sakai-group-picker\n            site-id=\"${portal.siteId}\"\n            group-id=\"${ifDefined(this.groupId)}\"\n            aria-labelledby=\"sm-group-selector-label-${this.assignmentId}\"\n            class=\"group-select\"\n            @group-selected=${this.groupSelected}>\n          </sakai-group-picker>\n        </div>\n        <button type=\"button\" class=\"btn btn-link\" id=\"sm-show-recipients-button\" @click=${this.listRecipients}>${this.i18n.show_recipients}</button>\n        ${this.recipientsToCheck.length > 0 ? html`\n          <div class=\"sm-recipients-label\">${this.i18n.recipients}</div>\n          <div class=\"sm-recipients\">\n            ${this.recipientsToCheck.map(r => html`<div>${r.displayName}</div>`)}\n          </div>\n        ` : nothing }\n        <div class=\"send-button-wrapper\">\n          <button type=\"button\" class=\"btn btn-link d-inline-block\" @click=${this.sendMessage}>${this.i18n.send}</button>\n          ${this.sending ? html`\n          <div>\n            <sp-progress-bar aria-label=\"Loaded an unclear amount\" indeterminate></sp-progress-bar>\n          </div>\n          ` : nothing }\n          ${this.success ? html`<span class=\"sm-alert sak-banner-success-inline\">${this.i18n.success}</span>` : nothing}\n          ${this.error ? html`<span class=\"sm-alert sak-banner-error-inline\">${this.i18n.error}</span>` : nothing }\n        </div>\n      </div>\n    `;\n  }\n\n  actionChanged(e) {\n\n    this.recipientsToCheck = [];\n    this.action = e.target.value;\n  }\n\n  minScoreChanged(e) {\n\n    this.recipientsToCheck = [];\n    this.minScore = e.target.value;\n  }\n\n  maxScoreChanged(e) {\n\n    this.recipientsToCheck = [];\n    this.maxScore = e.target.value;\n  }\n\n  groupSelected(e) {\n\n    this.recipientsToCheck = [];\n    this.group = e.detail.value;\n  }\n\n  reset() {\n\n    this.groupId = \"any\";\n    this.action = \"1\";\n    this.subject = \"\";\n    this.body = \"\";\n    this.success = false;\n    this.error = false;\n    this.recipientsToCheck = [];\n    this.minScore = \"\";\n    this.maxScore = \"\";\n    this.validationError = \"\";\n  }\n\n  getFormData() {\n\n    const formData = new FormData();\n    formData.set(\"action\", this.action);\n    formData.set(\"groupRef\", this.group || \"\");\n    formData.set(\"minScore\", this.minScore || \"\");\n    formData.set(\"maxScore\", this.maxScore || \"\");\n    formData.set(\"siteId\", portal.siteId);\n    formData.set(\"subject\", this.subject);\n    formData.set(\"body\", this.body);\n    formData.set(\"assignmentId\", this.assignmentId);\n    return formData;\n  }\n\n  listRecipients() {\n\n    const formData = this.getFormData();\n\n    fetch(\"/direct/gbng/listMessageRecipients.json\", { method: \"POST\", cache: \"no-cache\", credentials: \"same-origin\", body: formData })\n      .then(r => r.json())\n      .then(data => {\n\n        this.recipientsToCheck = data;\n      });\n  }\n\n  sendMessage() {\n\n    if (!this.subject || !this.body) {\n      this.validationError = \"You need to supply a subject and body!\";\n      return;\n    }\n\n    const formData = this.getFormData();\n\n    this.sending = true;\n\n    fetch(\"/direct/gbng/messageStudents.json\", { method: \"POST\", cache: \"no-cache\", credentials: \"same-origin\", body: formData })\n      .then(r => {\n\n        if (r.ok) {\n          this.error = false;\n          return r.json();\n        }\n        this.error = true;\n\n      })\n      .then(data => {\n\n        if (data.result) {\n          this.success = true;\n          this.sending = false;\n          window.setTimeout(() => {\n            this.success = false;\n            this.reset();\n          }, 1500);\n        }\n      });\n  }\n}\n", "import { SakaiSubmissionMessager } from \"./src/SakaiSubmissionMessager.js\";\n\ncustomElements.define(\"sakai-submission-messager\", SakaiSubmissionMessager);\n"],
  "mappings": "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",
  "names": ["version", "observedForElements", "updateRTL", "dir", "el", "rtlObserver", "canManageContentDirection", "SpectrumMixin", "constructor", "SpectrumMixinElement", "activeElement", "root", "_a", "currentNode", "ancestors", "ancestor", "dirParent", "localName", "SpectrumElement", "LitElement", "version", "defaultPropertyDeclaration", "attribute", "type", "String", "converter", "defaultConverter", "reflect", "hasChanged", "notEqual", "standardProperty", "options", "target", "context", "kind", "metadata", "properties", "globalThis", "litPropertyMetadata", "get", "set", "Map", "name", "v", "oldValue", "call", "this", "requestUpdate", "_$changeProperty", "value", "Error", "property", "protoOrTarget", "nameOrContext", "proto", "hasOwnProperty", "constructor", "createProperty", "wrapped", "Object", "getOwnPropertyDescriptor", "desc", "obj", "name", "descriptor", "configurable", "enumerable", "Reflect", "decorate", "Object", "defineProperty", "query", "selector", "cache", "protoOrTarget", "nameOrContext", "descriptor", "doQuery", "el", "renderRoot", "querySelector", "get", "set", "key", "Symbol", "this", "v", "desc", "result", "call", "hasUpdated", "queryAssignedNodes", "options", "obj", "name", "slot", "slotSelector", "desc", "get", "this", "renderRoot", "querySelector", "assignedNodes", "SizedMixin", "constructor", "validSizes", "noDefaultSize", "defaultSize", "SizedElement", "value", "fallbackSize", "size", "validSize", "oldSize", "changes", "__decorateClass", "property", "getLabelFromSlot", "label", "slotEl", "textContent", "accumulator", "node", "MutationController", "host", "target", "config", "callback", "skipInitial", "this", "_targets", "Set", "_skipInitial", "_unobservedUpdate", "_host", "add", "_config", "window", "MutationObserver", "_observer", "records", "handleChanges", "requestUpdate", "addController", "console", "warn", "value", "hostConnected", "observe", "hostDisconnected", "disconnect", "hostUpdated", "pendingRecords", "takeRecords", "length", "assignedNodesList", "ObserveSlotText", "constructor", "slotName", "excludedSelectors", "_a", "_b", "notExcluded", "el", "selector", "SlotTextObservingElement", "args", "MutationController", "mutationsList", "mutation", "assignedNodes", "currentNode", "node", "changedProperties", "childNodes", "textNodes", "__decorateClass", "property", "queryAssignedNodes", "languageResolverUpdatedSymbol", "LanguageResolutionController", "host", "_a", "queryThemeEvent", "lang", "unsubscribe", "previous", "randomID", "b", "styles", "css", "icon_css_default", "IconBase", "SpectrumElement", "iconStyles", "changes", "html", "__decorateClass", "property", "customTemplateLiteralTag", "tag", "strings", "values", "acc", "v", "idx", "setCustomTemplateLiteralTag", "Asterisk100Icon", "width", "height", "title", "html", "IconAsterisk100", "IconBase", "setCustomTemplateLiteralTag", "html", "Asterisk100Icon", "defineElement", "name", "constructor", "defineElement", "IconAsterisk100", "styles", "css", "spectrum_icon_asterisk_css_default", "conditionAttributeWithoutId", "el", "attribute", "ids", "ariaDescribedby", "descriptors", "descriptor", "id", "conditionAttributeWithId", "elementResolverUpdatedSymbol", "ElementResolutionController", "host", "selector", "mutationList", "needsResolution", "mutation", "currentElementRemoved", "matchingElementAdded", "attributeChangedOnCurrentElement", "attributeChangedOnMatchingElement", "el", "_a", "element", "previous", "parent", "styles", "css", "field_label_css_default", "FieldLabel", "SizedMixin", "SpectrumElement", "ElementResolutionController", "styles", "asteriskIconStyles", "event", "parent", "target", "targetParent", "targetHost", "applyLabel", "focusable", "conditionAttributeWithId", "conditionAttributeWithoutId", "assignedNodes", "node", "html", "nothing", "changes", "randomID", "elementResolverUpdatedSymbol", "__decorateClass", "property", "query", "defineElement", "FieldLabel", "styles", "css", "progress_bar_css_default", "ProgressBar", "SizedMixin", "ObserveSlotText", "SpectrumElement", "LanguageResolutionController", "styles", "html", "nothing", "labelFromSlot", "getLabelFromSlot", "changes", "__decorateClass", "property", "query", "defineElement", "ProgressBar", "SakaiSubmissionMessager", "SakaiElement", "t", "ke", "to", "r", "D", "formData", "data", "SakaiSubmissionMessager"]
}
