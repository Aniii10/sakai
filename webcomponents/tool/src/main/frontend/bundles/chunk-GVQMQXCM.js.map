{
  "version": 3,
  "sources": ["../node_modules/@sakai-ui/sakai-rubrics/src/RubricsElement.js", "../node_modules/@sakai-ui/sakai-rubrics/src/SakaiRubricPdf.js", "../node_modules/@sakai-ui/sakai-rubrics/sakai-rubric-pdf.js"],
  "sourcesContent": ["import { SakaiElement } from \"@sakai-ui/sakai-element\";\nimport { getUserLocale } from \"@sakai-ui/sakai-portal-utils\";\n\nexport class RubricsElement extends SakaiElement {\n\n  static properties = { _i18n: { state: true } };\n\n  constructor() {\n\n    super();\n\n    this.locale = getUserLocale();\n\n    // Keep a reference to the i18n promise so that sub classes can wait on it.\n    this.i18nLoaded = this.loadTranslations(\"rubrics\");\n    this.i18nLoaded.then(r => this._i18n = r);\n  }\n\n  isUtilsAvailable() {\n\n    const available = window.top.rubrics && window.top.rubrics.utils;\n    if (!available) {\n      console.error(\"Rubrics Utils has not been loaded (sakai-rubrics-utils.js). THINGS WILL BREAK!\");\n    }\n    return available;\n  }\n\n  initLightbox(i18n, siteId, enablePdfExport) {\n\n    if (this.isUtilsAvailable()) {\n      window.top.rubrics.utils.initLightbox(i18n, siteId, enablePdfExport);\n    }\n  }\n\n  showRubricLightbox(id, attributes) {\n\n    console.debug(\"RubricsElement.showRubricLightbox\");\n\n    if (this.isUtilsAvailable()) {\n      window.top.rubrics.utils.showRubric(id, attributes);\n    }\n  }\n\n  getHighLow(myArray) {\n\n    let lowest = Number.POSITIVE_INFINITY;\n    let highest = Number.NEGATIVE_INFINITY;\n    let tmp;\n\n    for (let i = myArray.length - 1; i >= 0; i--) {\n      tmp = myArray[i].points;\n      if (tmp < lowest) lowest = tmp;\n      if (tmp > highest) highest = tmp;\n    }\n\n    return {\n      high: highest,\n      low: lowest\n    };\n  }\n\n  isCriterionGroup(criterion) {\n    return criterion.ratings.length === 0;\n  }\n\n  openRubricsTab(tabId) {\n\n    this.querySelectorAll(\".rubric-tab-content\").forEach(tab => {\n\n      // put all tabs' styling back to default [invisible]\n      tab.setAttribute(\"class\", \"rubric-tab-content\");\n      if (tab.getAttribute(\"id\").indexOf(\"summary\") !== -1 && tab.getAttribute(\"id\").indexOf(tabId) === -1) { //remove any summary in this tab; only one should exist at a time\n        tab.innerHTML = \"\";\n      }\n    });\n\n    const tabNow = document.getElementById(tabId);\n    tabNow && tabNow.setAttribute(\"class\", \"rubric-tab-content rubrics-visible\"); // style the clicked tab to be visible\n    this.querySelectorAll(\".rubrics-tab-button\").forEach(tb => tb.setAttribute(\"class\", \"rubrics-tab-button\"));\n    const tabButtonNow = this.querySelector(`#${tabId}-button`);\n    tabButtonNow && tabButtonNow.setAttribute(\"class\", \"rubrics-tab-button rubrics-tab-selected\"); //select styling on current tab button\n  }\n\n  makeASummary(type, siteId) {\n\n    if (this.querySelector(`${type}-summary`)) { //avoid adding an extra summary by accident\n      this.openRubricsTab(`rubric-${type}-summary-${this.instanceSalt}`);\n    }\n    const summary = document.createElement(\"sakai-rubric-summary\");\n    summary.setAttribute(\"id\", `${type}-summary`);\n    summary.setAttribute(\"site-id\", siteId);\n    summary.setAttribute(\"entity-id\", this.entityId);\n    summary.setAttribute(\"tool-id\", this.toolId);\n    if (this.evaluatedItemId) {\n      summary.setAttribute(\"evaluated-item-id\", this.evaluatedItemId);\n    }\n    summary.setAttribute(\"evaluated-item-owner-id\", this.evaluatedItemOwnerId);\n    summary.setAttribute(\"summary-type\", type);\n    const div = document.getElementById(`rubric-${type}-summary-${this.instanceSalt}`);\n    div && div.appendChild(summary);\n    this.openRubricsTab(`rubric-${type}-summary-${this.instanceSalt}`);\n  }\n\n  _stopPropagation(e) { e.stopPropagation(); }\n\n  shouldUpdate() {\n    return this._i18n;\n  }\n\n  tr(key, options) {\n    return super.tr(key, options, \"rubrics\");\n  }\n}\n\n", "import { RubricsElement } from \"./RubricsElement.js\";\nimport { html } from \"lit\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\n\nexport class SakaiRubricPdf extends RubricsElement {\n\n  static properties = {\n\n    rubricTitle: { attribute: \"rubric-title\", type: String },\n    rubricId: { attribute: \"rubric-id\", type: String },\n    siteId: { attribute: \"site-id\", type: String },\n    toolId: { attribute: \"tool-id\", type: String },\n    entityId: { attribute: \"entity-id\", type: String },\n    evaluatedItemId: { attribute: \"evaluated-item-id\", type: String },\n\n    _url: { state: true },\n  };\n\n  attributeChangedCallback(name, oldValue, newValue) {\n\n    super.attributeChangedCallback(name, oldValue, newValue);\n\n    if (this.siteId && this.rubricId) {\n\n      let url = `/api/sites/${this.siteId}/rubrics/${this.rubricId}/pdf`;\n      if (this.toolId && this.entityId && this.evaluatedItemId) {\n        url += `?toolId=${this.toolId}&itemId=${this.entityId}&evaluatedItemId=${this.evaluatedItemId}`;\n      }\n      this._url = url;\n    }\n  }\n\n  shouldUpdate() {\n    return this._url;\n  }\n\n  render() {\n\n    return html`\n      <a role=\"button\"\n        title=\"${this.tr(\"export_title\", [ this.rubricTitle ])}\"\n        aria-label=\"${this.tr(\"export_title\", [ this.rubricTitle ])}\"\n        href=\"${ifDefined(this._url)}\"\n        @click=${e => e.stopPropagation()}\n        class=\"linkStyle pdf fa fa-file-pdf-o\">\n      </a>\n    `;\n  }\n}\n", "import { SakaiRubricPdf } from \"./src/SakaiRubricPdf.js\";\n\ncustomElements.define(\"sakai-rubric-pdf\", SakaiRubricPdf);\n"],
  "mappings": "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",
  "names": ["RubricsElement", "SakaiElement", "getUserLocale", "r", "available", "i18n", "siteId", "enablePdfExport", "id", "attributes", "myArray", "lowest", "highest", "tmp", "i", "criterion", "tabId", "tab", "tabNow", "tb", "tabButtonNow", "type", "summary", "div", "e", "key", "options", "SakaiRubricPdf", "RubricsElement", "name", "oldValue", "newValue", "url", "ke", "to", "e", "SakaiRubricPdf"]
}
