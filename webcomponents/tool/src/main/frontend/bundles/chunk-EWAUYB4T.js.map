{
  "version": 3,
  "sources": ["../node_modules/@sakai-ui/sakai-group-picker/src/SakaiGroupPicker.js", "../node_modules/@sakai-ui/sakai-group-picker/sakai-group-picker.js"],
  "sourcesContent": ["import { SakaiElement } from \"@sakai-ui/sakai-element\";\nimport { html } from \"lit\";\n\nexport class SakaiGroupPicker extends SakaiElement {\n\n  static properties = {\n\n    groups: { type: Array },\n    siteId: { attribute: \"site-id\", type: String },\n    groupRef: { attribute: \"group-ref\", type: String },\n    multiple: { type: Boolean },\n    selectedGroups: { attribute: \"selected-groups\", type: Array },\n    _i18n: { state: true },\n  };\n\n  constructor() {\n\n    super();\n\n    this.loadTranslations(\"group-picker\").then(t => this._i18n = t);\n  }\n\n  connectedCallback() {\n\n    super.connectedCallback();\n\n    if (this.siteId && !this.groups) {\n\n      const url = `/direct/site/${this.siteId}/groups.json`;\n      fetch(url, { credentials: \"same-origin\" })\n        .then(r => {\n          if (r.ok) {\n            return r.json();\n          }\n          throw new Error(`Network error while retrieving groups from ${url}`);\n        })\n        .then(groups => {\n          this.groups = groups.map(g => ({ reference: g.reference, title: g.title }));\n        })\n        .catch(error => console.error(error));\n    }\n  }\n\n  groupChanged(e) {\n\n    const groups = this.multiple ? Array.from(e.target.selectedOptions).map(o => o.value) : [ e.target.value ];\n    this.dispatchEvent(new CustomEvent(\"groups-selected\", { detail: { value: groups }, bubbles: true }));\n  }\n\n  firstUpdated() {\n\n    if (this.groupRef) {\n      // An initial group has been specified. We only want to do this on the first update.\n      this.groupChanged({ target: { value: this.groupRef } });\n    }\n  }\n\n  shouldUpdate() {\n    return this._i18n && this.groups;\n  }\n\n  render() {\n\n    return html`\n      <select aria-label=\"${this._i18n.group_selector_label}\" @change=${this.groupChanged} ?multiple=${this.multiple} .value=${this.selectedGroups}>\n        <option value=\"/site/${this.siteId}\" .selected=${this.siteId && this.groupRef && this.siteId === this.groupRef}>\n          ${this._i18n.site}\n        </option>\n        ${this.groups.map(g => html`\n          <option value=\"${g.reference}\" ?selected=${this.groupRef === g.reference || (this.selectedGroups && this.selectedGroups.includes(g.reference))}>${g.title}</option>\n        `)}\n      </select>\n    `;\n  }\n}\n", "import { SakaiGroupPicker } from './src/SakaiGroupPicker.js';\n\n!customElements.get(\"sakai-group-picker\") && customElements.define('sakai-group-picker', SakaiGroupPicker);\n"],
  "mappings": "+CAGO,IAAMA,EAAN,cAA+BC,CAAa,CAEjD,OAAO,WAAa,CAElB,OAAQ,CAAE,KAAM,KAAM,EACtB,OAAQ,CAAE,UAAW,UAAW,KAAM,MAAO,EAC7C,SAAU,CAAE,UAAW,YAAa,KAAM,MAAO,EACjD,SAAU,CAAE,KAAM,OAAQ,EAC1B,eAAgB,CAAE,UAAW,kBAAmB,KAAM,KAAM,EAC5D,MAAO,CAAE,MAAO,EAAK,CACvB,EAEA,aAAc,CAEZ,MAAM,EAEN,KAAK,iBAAiB,cAAc,EAAE,KAAKC,GAAK,KAAK,MAAQA,CAAC,CAChE,CAEA,mBAAoB,CAIlB,GAFA,MAAM,kBAAkB,EAEpB,KAAK,QAAU,CAAC,KAAK,OAAQ,CAE/B,IAAMC,EAAM,gBAAgB,KAAK,MAAM,eACvC,MAAMA,EAAK,CAAE,YAAa,aAAc,CAAC,EACtC,KAAKC,GAAK,CACT,GAAIA,EAAE,GACJ,OAAOA,EAAE,KAAK,EAEhB,MAAM,IAAI,MAAM,8CAA8CD,CAAG,EAAE,CACrE,CAAC,EACA,KAAKE,GAAU,CACd,KAAK,OAASA,EAAO,IAAIC,IAAM,CAAE,UAAWA,EAAE,UAAW,MAAOA,EAAE,KAAM,EAAE,CAC5E,CAAC,EACA,MAAMC,GAAS,QAAQ,MAAMA,CAAK,CAAC,CACxC,CACF,CAEA,aAAa,EAAG,CAEd,IAAMF,EAAS,KAAK,SAAW,MAAM,KAAK,EAAE,OAAO,eAAe,EAAE,IAAIG,GAAKA,EAAE,KAAK,EAAI,CAAE,EAAE,OAAO,KAAM,EACzG,KAAK,cAAc,IAAI,YAAY,kBAAmB,CAAE,OAAQ,CAAE,MAAOH,CAAO,EAAG,QAAS,EAAK,CAAC,CAAC,CACrG,CAEA,cAAe,CAET,KAAK,UAEP,KAAK,aAAa,CAAE,OAAQ,CAAE,MAAO,KAAK,QAAS,CAAE,CAAC,CAE1D,CAEA,cAAe,CACb,OAAO,KAAK,OAAS,KAAK,MAC5B,CAEA,QAAS,CAEP,OAAOI;AAAA,4BACiB,KAAK,MAAM,oBAAoB,aAAa,KAAK,YAAY,cAAc,KAAK,QAAQ,WAAW,KAAK,cAAc;AAAA,+BACnH,KAAK,MAAM,eAAe,KAAK,QAAU,KAAK,UAAY,KAAK,SAAW,KAAK,QAAQ;AAAA,YAC1G,KAAK,MAAM,IAAI;AAAA;AAAA,UAEjB,KAAK,OAAO,IAAIH,GAAKG;AAAA,2BACJH,EAAE,SAAS,eAAe,KAAK,WAAaA,EAAE,WAAc,KAAK,gBAAkB,KAAK,eAAe,SAASA,EAAE,SAAS,CAAE,IAAIA,EAAE,KAAK;AAAA,SAC1J,CAAC;AAAA;AAAA,KAGR,CACF,ECxEA,CAAC,eAAe,IAAI,oBAAoB,GAAK,eAAe,OAAO,qBAAsBI,CAAgB",
  "names": ["SakaiGroupPicker", "SakaiElement", "t", "url", "r", "groups", "g", "error", "o", "ke", "SakaiGroupPicker"]
}
