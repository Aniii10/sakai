{
  "version": 3,
  "sources": ["../node_modules/@sakai-ui/sakai-tasks/src/assignation-types.js", "../node_modules/@sakai-ui/sakai-tasks/src/SakaiTasksCreateTask.js", "../node_modules/@sakai-ui/sakai-tasks/sakai-tasks-create-task.js"],
  "sourcesContent": ["export const GROUP = \"group\";\nexport const SITE = \"site\";\nexport const USER = \"user\";\n", "import { css, html, nothing } from \"lit\";\nimport { loadProperties } from \"@sakai-ui/sakai-i18n\";\nimport { SakaiDialogContent } from \"@sakai-ui/sakai-dialog-content\";\nimport \"@sakai-ui/sakai-date-picker/sakai-date-picker.js\";\nimport \"@sakai-ui/sakai-button/sakai-button.js\";\nimport \"@sakai-ui/sakai-icon\";\nimport \"@sakai-ui/sakai-editor/sakai-editor.js\";\nimport \"@sakai-ui/sakai-group-picker/sakai-group-picker.js\";\nimport { GROUP, SITE, USER } from \"./assignation-types.js\";\n\n/**\n * Handles the creation or updating of user or site tasks\n *\n * @property {string} [siteId]\n * @property {string} [userId]\n * @property {object} [task]\n * @fires {task-created} Fired when the task has been created. The detail is the new/updated task.\n */\nexport class SakaiTasksCreateTask extends SakaiDialogContent {\n\n  static properties = {\n\n    siteId: { attribute: \"site-id\", type: String },\n    userId: { attribute: \"user-id\", type: String },\n    task: { type: Object },\n    deliverTasks: { attribute: \"deliver-tasks\", type: Boolean },\n    groups: { type: Array },\n\n    _i18n: { state: true },\n    _error: { state: true },\n    _assignationType: { state: true },\n    _selectedGroups: { state: true },\n    _mode: { state: true },\n  };\n\n  constructor() {\n\n    super();\n\n    this.deliverTasks = false;\n\n    this.defaultTask = { taskId: \"\",\n      description: \"\",\n      priority: \"3\",\n      notes: \"\",\n      due: Date.now(),\n      assignationType: \"\",\n      selectedGroups: [],\n      siteId: \"\",\n      owner: \"\",\n      taskAssignedTo: \"\",\n      complete: false,\n    };\n\n    this.task = { ...this.defaultTask };\n    this._assignationType = USER;\n    this._mode = \"create\";\n    this.groups = [];\n    loadProperties(\"tasks\").then(r => this._i18n = r);\n  }\n\n  set mode(value) {\n\n    const old = this._mode;\n\n    this._mode = value;\n\n    if (this._mode === \"create\") {\n      this.task = { ...this.defaultTask };\n    }\n\n    this.requestUpdate(\"mode\", old);\n  }\n\n  get mode() { return this._mode; }\n\n  set task(value) {\n\n    const old = this._task;\n    this._task = value;\n\n    this.error = false;\n\n    this._backupTask = { ...value };\n\n    this.siteId = this.siteId ?? value.siteId;\n\n    this.requestUpdate(\"task\", old);\n\n    this.updateComplete.then(() => this._getNotesEditor()?.setContent(value.notes));\n  }\n\n  get task() { return this._task; }\n\n  _getTaskAssignedTo() {\n\n    let result = this.task.taskAssignedTo;\n    if (result != null) {\n      result = result.replace(\"#GROUP#\", this._i18n.task_assigned_to_group).replace(\"#SITE#\", this._i18n.task_assigned_to_site).replace(\"#USER#\", this._i18n.task_assigned_to_user);\n    }\n    return result;\n  }\n\n  _handleGroupsSelected(e) { this.task.selectedGroups = e.detail.groups; }\n\n  _addSelectedGroups() {\n    this.selectedGroups && (this.task.selectedGroups = [ ...this.selectedGroups ].map(sg => sg.value));\n  }\n\n  _save() {\n\n    this.task.assignationType = this.assignationType;\n    this.task.siteId = this.siteId;\n    this.task.userId = this.userId;\n    this.task.owner = this.task.owner || this.userId;\n    this._addSelectedGroups();\n    const url = `/api/tasks${this.task.taskId ? `/${this.task.taskId}` : \"\"}`;\n    fetch(url, {\n      credentials: \"include\",\n      method: this.task.taskId ? \"PUT\" : \"POST\",\n      cache: \"no-cache\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(this.task),\n    })\n    .then(r => {\n\n      if (r.ok) {\n        this._error = false;\n        return r.json();\n      }\n      this._error = true;\n      throw new Error(`Network error while saving task: ${r.status}`);\n    })\n    .then(savedTask => {\n\n      this.dispatchEvent(new CustomEvent(\"task-created\", { detail: { task: savedTask }, bubbles: true }));\n      this.close();\n    })\n    .catch(error => console.error(error));\n  }\n\n  /**\n   * @override\n   */\n  cancel() {\n    this.close();\n  }\n\n  /**\n   * @override\n   */\n  close() {\n\n    this._reset();\n    super.close();\n  }\n\n  _getNotesEditor() { return this.shadowRoot.querySelector(\"sakai-editor\"); }\n\n  _reset() {\n\n    const descriptionEl = this.shadowRoot.getElementById(\"description\");\n    descriptionEl.value = this._backupTask.description;\n    descriptionEl.disabled = false;\n\n    const datePicker = this.shadowRoot.getElementById(\"due\");\n    datePicker.reset();\n    datePicker.disabled = false;\n\n    const completeEl = this.shadowRoot.getElementById(\"complete\");\n    completeEl && (completeEl.checked = this._backupTask.complete);\n\n    const priorityEl = this.shadowRoot.getElementById(\"priority\");\n    priorityEl.value = \"3\";\n\n    this._getNotesEditor().setContent(this._backupTask.notes);\n\n    this._assignationType = USER;\n    this._mode = \"create\";\n  }\n\n  _handleComplete(e) {\n\n    this.task.complete = e.target.checked;\n    if (e.target.checked) {\n      this.task.softDeleted = false;\n    }\n  }\n\n  _existGroups() { return Array.isArray(this.groups) && this.groups.length > 0; }\n\n  _setDescription(e) { this.task.description = e.target.value; }\n\n  _setNotes(e) { this.task.notes = e.detail.content; }\n\n  /**\n   * @override\n   */\n  shouldUpdate(changed) { return this.task && this._i18n && super.shouldUpdate(changed); }\n\n  _handlePriority(e) { this.task.priority = e.target.value; }\n\n  _handleDate(e) {\n\n    this.task.due = e.detail.epochMillis;\n    this.dueUpdated = true;\n  }\n\n  /**\n   * @override\n   */\n  firstUpdated() {\n\n    const disableFields = (this.task.owner !== this.userId && this.mode === \"edit\");\n    if (disableFields) {\n      this.shadowRoot.getElementById(\"description\").disabled = true;\n      this.shadowRoot.getElementById(\"due\").disabled = true;\n    }\n  }\n\n  /**\n   * @override\n   */\n  title() {\n\n    return html`\n      ${this.task.taskId == \"\" ? this._i18n.create_new_task : this._i18n.edit_task}\n    `;\n  }\n\n  /**\n   * @override\n   */\n  content() {\n\n    return html` \n      ${this.deliverTasks ? html`\n      <div class=\"label\" style=\"margin-bottom:15px;\">\n        <label>${this._getTaskAssignedTo()}</label>\n      </div>\n      ` : nothing }\n      <div class=\"label\">\n        <label for=\"description\">${this._i18n.description}</label>\n      </div>\n      <div class=\"input\">\n        <input type=\"text\"\n            id=\"description\"\n            size=\"50\"\n            maxlength=\"150\"\n            @input=${this._setDescription}\n            .value=${this.task.description}>\n      </div>\n      <div id=\"due-and-priority-block\">\n        <div id=\"due-block\">\n          <div class=\"label\">\n            <label for=\"due\">${this._i18n.due}</label>\n          </div>\n          <div class=\"input\">\n            <sakai-date-picker id=\"due\"\n                @datetime-selected=${this._handleDate}\n                epoch-millis=${this.task.due}\n                label=\"${this._i18n.due}\">\n            </sakai-date-picker>\n          </div>\n        </div>\n        <div id=\"spacer\"></div>\n        <div id=\"priority-block\">\n          <div class=\"label\">\n            <label for=\"priority\">${this._i18n.priority}</label>\n          </div>\n          <div class=\"input\">\n            <select id=\"priority\" @change=${this._handlePriority} .value=${this.task.priority}>\n              <option value=\"5\">${this._i18n.high}</option>\n              <option value=\"4\">${this._i18n.quite_high}</option>\n              <option value=\"3\">${this._i18n.medium}</option>\n              <option value=\"2\">${this._i18n.quite_low}</option>\n              <option value=\"1\">${this._i18n.low}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n      <div id=\"complete-block\">\n        <div>\n          <label for=\"complete\">${this._i18n.completed}</label>\n          <input\n            type=\"checkbox\"\n            id=\"complete\"\n            title=\"${this._i18n.complete_tooltip}\"\n            @click=${this._handleComplete}\n            .checked=${this.task.complete}>\n        </div>\n      </div>\n      <div class=\"label\">\n        <label for=\"text\">${this._i18n.text}</label>\n      </div>\n      <div class=\"input\">\n        <sakai-editor element-id=\"task-text-editor\" @changed=${this._setNotes} .content=${this.task.notes} textarea></sakai-editor>\n      </div>\n      ${this.deliverTasks && this.task.taskId === \"\" ? html`\n        <div class=\"label\">\n          <label for=\"description\">${this._i18n.deliver_task}</label>\n        </div>\n        <div id=\"create-task-block\">\n          <div>\n            <input type=\"radio\"\n                id=\"task-current-user\"\n                name=\"deliver-task\"\n                title=\"${this._i18n.deliver_my_dashboard}\"\n                value=\"user\"\n                @click=${() => this._assignationType = USER}\n                ?checked=${this._assignationType === USER} >\n            <label for=\"task-current-user\">${this._i18n.deliver_my_dashboard}</label>\n          </div>\n          <div>\n            <input type=\"radio\"\n                id=\"task-students\"\n                name=\"deliver-task\"\n                title=\"${this._i18n.deliver_site}\"\n                value=\"site\"\n                @click=${() => this._assignationType = SITE}\n                ?checked=${this._assignationType === SITE}>\n            <label for=\"task-students\">${this._i18n.deliver_site}</label>\n          </div>\n          ${this._existGroups() ? html`\n          <div class=\"d-inline\">\n            <input type=\"radio\"\n               id=\"task-groups\"\n               name=\"deliver-task\"\n               title=\"${this._i18n.deliver_group}\"\n               value=\"group\"\n               @click=${() => this._assignationType = GROUP}\n               ?checked=${this._assignationType === GROUP}>\n            <label for=\"task-groups\">${this._i18n.deliver_group}</label>\n          </div>\n          ` : nothing }\n          ${this._existGroups() ? html`\n          <div style=\"margin-left:20px; margin-top:5px;\">\n            <sakai-group-picker site-id=\"${this.siteId}\" .groups=${this.groups} .selected-groups=${this._selectedGroups} @groups-selected=${this._handleGroupsSelected}></sakai-group-picker>\n          </div>\n          ` : nothing }\n        </div>\n      ` : nothing }\n      ${this._error ? html`<div id=\"error\">${this._i18n.save_failed}</div>` : nothing }\n    `;\n  }\n\n  /**\n   * @override\n   */\n  buttons() {\n\n    return html`\n      <sakai-button @click=${this._save} primary>${this.task.taskId == \"\" ? this._i18n.add : this._i18n.save}</sakai-button>\n    `;\n  }\n\n  static styles = [\n    SakaiDialogContent.styles,\n    css`\n      #due-and-priority-block {\n        display: flex;\n        justify-content: space-between;\n      }\n        #due-block {\n          flex: 1;\n        }\n        #spacer {\n          flex: 2;\n        }\n        #priority-block {\n          flex: 1;\n        }\n      #complete-block {\n        margin-bottom: 10px;\n      }\n        #complete-block input {\n          margin-left: 10px;\n        }\n      #error {\n        font-weight: bold;\n        color: var(--sakai-tasks-save-failed-color, red)\n      }\n      #group {\n        width: 100%;\n      }\n      sakai-editor {\n        width: 100%;\n      }\n      .global-overlays {\n        z-index: 1200;\n      }\n    `\n  ];\n}\n", "import { SakaiTasksCreateTask } from \"./src/SakaiTasksCreateTask.js\";\n\ncustomElements.define(\"sakai-tasks-create-task\", SakaiTasksCreateTask);\n"],
  "mappings": "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",
  "names": ["GROUP", "SITE", "USER", "SakaiTasksCreateTask", "SakaiDialogContent", "USER", "loadProperties", "r", "value", "old", "result", "e", "sg", "url", "savedTask", "error", "descriptionEl", "datePicker", "completeEl", "priorityEl", "changed", "ke", "D", "SITE", "GROUP", "i", "SakaiTasksCreateTask"]
}
