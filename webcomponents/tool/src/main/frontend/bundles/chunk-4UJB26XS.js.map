{
  "version": 3,
  "sources": ["../node_modules/@sakai-ui/sakai-button/src/SakaiButton.js", "../node_modules/@sakai-ui/sakai-button/sakai-button.js", "../node_modules/@sakai-ui/sakai-dialog-content/src/SakaiDialogContent.js"],
  "sourcesContent": ["import { css, html, LitElement } from \"lit\";\n\nexport class SakaiButton extends LitElement {\n\n  static properties = {\n\n    primary: { type: Boolean },\n    type: { type: String },\n    href: { type: String },\n  };\n\n  clicked() {\n\n    if (this.href) {\n      window.parent.location = this.href;\n    }\n  }\n\n  focus() {\n    this.shadowRoot.querySelector(\"button\").focus();\n  }\n\n  render() {\n\n    return html`\n      <button\n        class=\"${this.primary ? \"primary\" : \"\"} ${this.type ? this.type : \"\"}\"\n        @click=${this.clicked}\n      >\n        <slot>\n        </slot>\n      </button>\n    `;\n  }\n\n  static styles = css`\n    button {\n      text-align: center;\n      padding: var(--sui-btn-padding);\n      border: 1px solid var(--button-border-color);\n      border-radius: var(--sui-btn-border-radius);\n      background: var(--button-background);\n      font-family: \"Open Sans\",sans-serif;\n      font-size: 1em;\n      font-weight: 400;\n      line-height: 18px;\n      color: var(--button-text-color);\n      text-decoration: none;\n      text-transform: none;\n      cursor: pointer;\n      -moz-appearance: none;\n      -webkit-appearance: none;\n      box-shadow: var(--button-shadow);\n    }\n    button:hover,\n    button:focus {\n      color: var(--button-hover-text-color);\n      text-decoration: none;\n      background: var(--button-hover-background);\n      border-color: var(--button-hover-border-color);\n      box-shadow: var(--button-hover-shadow);\n    }\n    button:focus {\n      outline: none;\n      box-shadow: 0px 0px 0px 3px var(--focus-outline-color);\n    }\n    button:active {\n      outline: 0;\n      color: var(--button-active-text-color);\n      text-decoration: none;\n      background: var(--button-active-background);\n      border-color: var(--button-active-border-color);\n      box-shadow: var(--button-active-shadow);\n    }\n    .primary {\n      background-color: var(--button-primary-background, #0f4b6f);\n      color: var(--primary-text-color, #FFFFFF);\n      border: 1px solid var(--button-primary-border-color);\n      background: var(--button-primary-background);\n      font-weight: 600;\n      color: var(--button-primary-text-color);\n      text-decoration: none;\n      text-transform: none;\n      cursor: pointer;\n      box-shadow: var(--button-primary-shadow);\n    }\n    .primary:hover,\n    .primary:focus {\n      color: var(--button-primary-hover-text-color);\n      text-decoration: none;\n      background: var(--button-primary-hover-background);\n      border-color: var(--button-primary-hover-border-color);\n      box-shadow: var(--button-primary-hover-shadow);\n    }\n    .primary:focus {\n      outline: none;\n      box-shadow: 0px 0px 0px 3px var(--focus-outline-color);\n    }\n    .primary:active {\n      outline: 0;\n      color: var(--button-primary-active-text-color);\n      text-decoration: none;\n      background: var(--button-primary-active-background);\n      border-color: var(--button-primary-active-border-color);\n      box-shadow: var(--button-primary-active-shadow);\n    }\n    .small {\n      border-radius: var(--sakai-small-button-border-radius, 4px);\n      padding: var(--sakai-small-button-padding, 2px);\n    }\n  `;\n}\n", "import { SakaiButton } from \"./src/SakaiButton.js\";\n\ncustomElements.define(\"sakai-button\", SakaiButton);\n", "import { LitElement, html, css } from \"lit\";\nimport \"@sakai-ui/sakai-icon/sakai-icon.js\";\nimport \"@sakai-ui/sakai-button/sakai-button.js\";\nimport { loadProperties as lp } from \"@sakai-ui/sakai-i18n\";\n\nexport class SakaiDialogContent extends LitElement {\n\n  static properties = {\n\n    title: { type: String },\n    _baseI18n: { state: true },\n  };\n\n  constructor() {\n\n    super();\n\n    lp(\"dialog-content\").then(r => this._baseI18n = r);\n  }\n\n  close() {\n    this.dispatchEvent(new Event(\"close-overlay\", { bubbles: true }));\n  }\n\n  cancel() {\n    this.close();\n  }\n\n  loadProperties(options) {\n    return lp(options);\n  }\n\n  content() {}\n\n  buttons() {}\n\n  shouldUpdate() {\n    return this._baseI18n;\n  }\n\n  render() {\n\n    return html`\n      <div id=\"container\">\n        <div id=\"titlebar\">\n          <div id=\"title\">${this.title()}</div>\n          <div id=\"close\">\n            <a href=\"javascript:;\"\n                @click=${this.close}\n                aria-label=\"${this._baseI18n.close}\"\n                title=\"${this._baseI18n.close}\">\n              <sakai-icon type=\"close\"></sakai-icon>\n            </a>\n          </div>\n        </div>\n        <div id=\"content\">\n          ${this.content()}\n        </div>\n        <div id=\"buttonbar\">\n          ${this.buttons()}\n          <sakai-button @click=${this.cancel}>${this._baseI18n.cancel}</sakai-button>\n        </div>\n      </div>\n    `;\n  }\n\n  static styles = css`\n    a {\n      color: var(--link-color);\n    }\n    a:hover { \n      color: var(--link-hover-color);\n    }\n    a:active {\n      color: var(--link-active-color);\n    }\n    a:visited {\n      color: var(--link-visited-color);\n    }\n      #container {\n        background-color: var(--sakai-background-color-2);\n        font-family: var(--sakai-font-family);\n        min-width: 300px;\n        box-shadow: var(--elevation-8dp);\n      }\n        #titlebar {\n          padding: 14px;\n          display: flex;\n          font-size: 16px;\n          align-items: center;\n          background-color: var(--sakai-background-color-3);\n          border-bottom: var(--sakai-border-color) solid 1px;\n        }\n          #title {\n            flex: 2;\n          }\n          #close {\n            flex: 1;\n            text-align: right;\n          }\n        #content {\n          background-color: var(--sakai-modal-content-bg);\n          padding: 20px;\n        }\n          div.label {\n            margin-bottom: 4px;\n            font-weight: bold;\n          }\n          div.input {\n            margin-bottom: 10px;\n          }\n\n      #buttonbar {\n        background-color: var(--sakai-modal-content-bg);\n        display: flex;\n        justify-content: flex-end;\n        padding: 12px 4px 12px 16px;\n      }\n        sakai-button {\n          margin-left: 10px;\n        }\n  `;\n}\n"],
  "mappings": "8FAEO,IAAMA,EAAN,cAA0BC,CAAW,CAE1C,OAAO,WAAa,CAElB,QAAS,CAAE,KAAM,OAAQ,EACzB,KAAM,CAAE,KAAM,MAAO,EACrB,KAAM,CAAE,KAAM,MAAO,CACvB,EAEA,SAAU,CAEJ,KAAK,OACP,OAAO,OAAO,SAAW,KAAK,KAElC,CAEA,OAAQ,CACN,KAAK,WAAW,cAAc,QAAQ,EAAE,MAAM,CAChD,CAEA,QAAS,CAEP,OAAOC;AAAA;AAAA,iBAEM,KAAK,QAAU,UAAY,EAAE,IAAI,KAAK,KAAO,KAAK,KAAO,EAAE;AAAA,iBAC3D,KAAK,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,KAM3B,CAEA,OAAO,OAASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA4ElB,EC7GA,eAAe,OAAO,eAAgBC,CAAW,ECG1C,IAAMC,EAAN,cAAiCC,CAAW,CAEjD,OAAO,WAAa,CAElB,MAAO,CAAE,KAAM,MAAO,EACtB,UAAW,CAAE,MAAO,EAAK,CAC3B,EAEA,aAAc,CAEZ,MAAM,EAENC,EAAG,gBAAgB,EAAE,KAAKC,GAAK,KAAK,UAAYA,CAAC,CACnD,CAEA,OAAQ,CACN,KAAK,cAAc,IAAI,MAAM,gBAAiB,CAAE,QAAS,EAAK,CAAC,CAAC,CAClE,CAEA,QAAS,CACP,KAAK,MAAM,CACb,CAEA,eAAeC,EAAS,CACtB,OAAOF,EAAGE,CAAO,CACnB,CAEA,SAAU,CAAC,CAEX,SAAU,CAAC,CAEX,cAAe,CACb,OAAO,KAAK,SACd,CAEA,QAAS,CAEP,OAAOC;AAAA;AAAA;AAAA,4BAGiB,KAAK,MAAM,CAAC;AAAA;AAAA;AAAA,yBAGf,KAAK,KAAK;AAAA,8BACL,KAAK,UAAU,KAAK;AAAA,yBACzB,KAAK,UAAU,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMjC,KAAK,QAAQ,CAAC;AAAA;AAAA;AAAA,YAGd,KAAK,QAAQ,CAAC;AAAA,iCACO,KAAK,MAAM,IAAI,KAAK,UAAU,MAAM;AAAA;AAAA;AAAA,KAInE,CAEA,OAAO,OAASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAwDlB",
  "names": ["SakaiButton", "h", "ke", "i", "SakaiButton", "SakaiDialogContent", "h", "loadProperties", "r", "options", "ke", "i"]
}
