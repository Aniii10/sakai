{
  "version": 3,
  "sources": ["../node_modules/@sakai-ui/sakai-rubrics/src/SakaiRubricGradingComment.js", "../node_modules/@sakai-ui/sakai-rubrics/sakai-rubric-grading-comment.js", "../node_modules/@sakai-ui/sakai-rubrics/src/SakaiRubricsApiMixin.js", "../node_modules/@sakai-ui/sakai-rubrics/src/SakaiRubricSummary.js", "../node_modules/@sakai-ui/sakai-rubrics/sakai-rubric-summary.js", "../node_modules/@sakai-ui/sakai-rubrics/src/sakai-rubrics-constants.js", "../node_modules/@sakai-ui/sakai-rubrics/src/SakaiRubricGrading.js", "../node_modules/@sakai-ui/sakai-rubrics/sakai-rubric-grading.js"],
  "sourcesContent": ["import { RubricsElement } from \"./RubricsElement.js\";\nimport { html } from \"lit\";\n\nexport class SakaiRubricGradingComment extends RubricsElement {\n\n  static properties = {\n\n    criterion: { type: Object },\n    entityId: { attribute: \"entity-id\", type: String },\n    evaluatedItemId: { attribute: \"evaluated-item-id\", type: String }\n  };\n\n  constructor() {\n\n    super();\n\n    this.randombit = Math.floor(Math.random() * 15001);\n  }\n\n  hideEditor() {\n    bootstrap.Dropdown.getOrCreateInstance(this.querySelector(\".dropdown-menu\"))?.hide();\n  }\n\n  _setupEditor() {\n\n    const editorOptions = {\n      startupFocus: true,\n      versionCheck: false,\n      removePlugins: \"wordcount\",\n      height: 60,\n    };\n\n    if (sakai && sakai.editor) {\n      editorOptions.toolbarSet = \"BasicText\";\n    } else {\n      editorOptions.toolbar = [ [ \"Bold\", \"Italic\", \"Underline\" ] ];\n    }\n\n    const editorKey = `criterion-${this.criterion.id}-${this.evaluatedItemId}-comment-${this.randombit}`;\n    const editorFunction = sakai && sakai.editor ? sakai.editor.launch : CKEDITOR.replace;\n    this._commentEditor = editorFunction(editorKey, editorOptions);\n\n    this._commentEditor.focus();\n\n    this._commentEditor.on(\"blur\", () => {\n\n      // When we click away from the comment editor we need to save the comment, but only if the comment has been updated\n      if (this._commentEditor.checkDirty()) {\n        this.criterion.comments = this._commentEditor.getData();\n        const updateEvent = new CustomEvent(\"update-comment\", {\n          detail: {\n            evaluatedItemId: this.evaluatedItemId,\n            entityId: this.entityId,\n            criterionId: this.criterion.id,\n            value: this.criterion.comments\n          },\n          bubbles: true, composed: true });\n        this.dispatchEvent(updateEvent);\n        this.requestUpdate();\n      }\n\n      this.hideEditor();\n    });\n  }\n\n  _updateEditor() {\n\n    this._commentEditor?.setData(this.criterion.comments, () => {\n      this._commentEditor.updateElement();\n      this._commentEditor.resetDirty();\n    });\n  }\n\n  firstUpdated() { this._setupEditor(); }\n\n  updated() { this._updateEditor(); }\n\n  render() {\n\n    return html`\n      <div class=\"dropdown\">\n        <button class=\"btn btn-icon\"\n            type=\"button\"\n            data-bs-toggle=\"dropdown\"\n            data-bs-auto-close=\"false\"\n            aria-label=\"${this._i18n.criterion_comment}\"\n            aria-expanded=\"false\">\n          <i class=\"bi bi-chat${this.criterion.comments ? \"-fill\" : \"\"} ${this.criterion.comments ? \"active\" : \"\"}\"></i>\n        </button>\n\n        <div class=\"rubric-comment-dropdown dropdown-menu\">\n          <div class=\"m-2 rubric-comment-body\">\n            <div class=\"fw-bold rubric-criterion-comment-title\">${this.tr(\"comment_for_criterion\", [ this.criterion.title ])}</div>\n            <div>\n              <textarea\n                aria-label=\"${this._i18n.criterion_comment}\"\n                class=\"form-control\"\n                name=\"rbcs-${this.evaluatedItemId}-${this.entityId}-criterion-comment-${this.criterion.id}\"\n                .value=${this.criterion.comments === undefined ? null : this.criterion.comments}\n                id=\"criterion-${this.criterion.id}-${this.evaluatedItemId}-comment-${this.randombit}\">\n              </textarea>\n            </div>\n            <div class=\"buttons act float-end\">\n              <button type=\"button\" class=\"active btn-xs\" @click=${this.hideEditor}>${this._i18n.done}</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n}\n", "import { SakaiRubricGradingComment } from \"./src/SakaiRubricGradingComment.js\";\n\ncustomElements.define(\"sakai-rubric-grading-comment\", SakaiRubricGradingComment);\n", "export const rubricsApiMixin = Base => class extends Base {\n\n  apiGetAssociation() {\n\n    const url = `/api/sites/${this.siteId}/rubric-associations/tools/${this.toolId}/items/${this.entityId}`;\n    return fetch(url, { credentials: \"include\" })\n      .then(r => {\n\n        if (r.status === 200) {\n          return r.json();\n        }\n\n        if (r.status !== 204) {\n          throw new Error(`Network error while getting association: ${r.status}`);\n        }\n\n        return null;\n      });\n  }\n\n  apiGetRubric(rubricId) {\n\n    const rubricUrl = `/api/sites/${this.siteId}/rubrics/${rubricId}`;\n    return fetch(rubricUrl, { credentials: \"include\" })\n      .then(r => {\n\n        if (r.ok) {\n          return r.json();\n        }\n\n        throw new Error(\"Network error while getting rubric\");\n      });\n  }\n\n  apiGetEvaluation() {\n\n    let url = `/api/sites/${this.siteId}/rubric-evaluations/tools/${this.toolId}/items/${this.entityId}/evaluations/${this.evaluatedItemId}/owners/${this.evaluatedItemOwnerId}`;\n\n    if (this.isPeerOrSelf) {\n      url += \"?isPeer=true\";\n    }\n\n    return fetch(url, { credentials: \"include\" })\n      .then(r => {\n\n        if (r.status === 200) {\n          return r.json();\n        }\n\n        if (r.status !== 204) {\n          throw new Error(`Network error while getting evaluation at ${url}`);\n        }\n\n        return null;\n      });\n  }\n\n  apiGetAllEvaluations() {\n\n    const url = `/api/sites/${this.siteId}/rubric-evaluations/tools/${this.toolId}/items/${this.entityId}`;\n    return fetch(url, { credentials: \"include\" })\n      .then(r => {\n\n        if (r.ok) {\n          return r.json();\n        }\n\n        throw new Error(`Network error while retrieving evaluations: ${r.status}`);\n      });\n  }\n};\n", "import { RubricsElement } from \"./RubricsElement.js\";\nimport { html } from \"lit\";\nimport { rubricsApiMixin } from \"./SakaiRubricsApiMixin.js\";\n\n/**\n * @property {string} siteId\n * @property {string} toolId\n * @property {string} entityId\n * @property {string} summaryType\n */\nexport class SakaiRubricSummary extends rubricsApiMixin(RubricsElement) {\n\n  static properties = {\n\n    siteId: { attribute: \"site-id\", type: String },\n    toolId: { attribute: \"tool-id\", type: String },\n    entityId: { attribute: \"entity-id\", type: String },\n    summaryType: { attribute: \"summary-type\", type: String },\n\n    _criteria: { state: true },\n    _rubric: { state: true },\n    _allEvaluations: { state: true },\n    _averages: { state: true },\n    _averageScore: { state: true },\n  };\n\n  constructor() {\n\n    super();\n\n    this.summaryType = \"student\";\n  }\n\n  connectedCallback() {\n\n    super.connectedCallback();\n\n    this._criteria = [];\n    if (this.isConnected) {\n\n      if (this.siteId && this.toolId && this.entityId) {\n        this._getAssociation();\n        this._getAllEvaluations();\n      }\n    }\n  }\n\n  render() {\n\n    if (this.summaryType === \"criteria\") {\n      return html`\n        <div class=\"d-flex justify-content-between align-items-center mb-2\">\n          <h3>${this._i18n.criteria_summary}</h3>\n          <div class=\"collapse-toggle-buttons\">\n            <button type=\"button\" class=\"btn btn-link\" @click=${this._expandAll}>${this._i18n.expand_all}</button>\n            <button type=\"button\" class=\"btn btn-link\" @click=${this._collapseAll}>${this._i18n.collapse_all}</button>\n          </div>\n        </div>\n        ${!this._allEvaluations?.length ? html`\n          <div class=\"sak-banner-warn\">${this._i18n.no_evaluations_warning}</div>\n        ` : html`\n          ${this._criteria.map(c => html`\n            <div class=\"mb-2\">\n              <div class=\"card\">\n                <div class=\"card text-center bg-light\">\n                  <h4>\n                    <a class=\"collapse-toggle collapsed\" data-bs-toggle=\"collapse\" href=\"#collapse${c.id}\">${c.title}</a>\n                  </h4>\n                </div>\n                <div id=\"collapse${c.id}\" class=\"collapse\">\n                  <div class=\"card-body\">\n                    <div class=\"table\">\n                      <table class=\"rubrics-summary-table table table-bordered table-sm\">\n                        <tr>\n                          ${c.ratings.map(r => html`\n                            <th class=\"rubrics-summary-table-cell\">\n                                <div>\n                                    ${this._rubric.weighted ? html`\n                                      (${r.weightedPoints})        \n                                    ` : html``}\n                                    ${r.points} \n                                    ${this._i18n.points}\n                                  </div>\n                                <div class=\"summary-rating-name\" title=\"${r.title}\">${this._limitCharacters(r.title, 20)}</div>\n                            </th>\n                            ${this.association.parameters.fineTunePoints && this._getCustomCount(c.id, r.weightedPoints) > 0 ? html`\n                              <th class=\"rubrics-summary-table-cell\">${this._i18n.adjusted_score}</th>\n                            ` : \"\"}\n                          `)}\n                          <th class=\"rubrics-summary-table-cell rubrics-summary-average-cell d-none\">${this._i18n.average}</th>\n                          <th  class=\"rubrics-summary-table-cell d-none\">${this._i18n.median}</th>\n                          <th  class=\"rubrics-summary-table-cell d-none\">${this._i18n.stdev}</th>\n                        </tr>\n                        <tr>\n                          ${c.ratings.map(r => html`\n                            <td class=\"points-${r.points} rubrics-summary-table-cell point-cell-${c.id}\">${this._getACount(c.id, r.id)}</td>\n                            ${this.association.parameters.fineTunePoints && this._getCustomCount(c.id, r.weightedPoints) > 0 ? html`\n                              <td class=\"rubrics-summary-table-cell\">${this._getCustomCount(c.id, r.weightedPoints)}</td>\n                            ` : html``}\n                          `)}\n                          <td class=\"rubrics-summary-table-cell rubrics-summary-average-cell d-none\">${this._getPointsAverage(c.id)}</td>\n                          <td class=\"rubrics-summary-table-cell d-none\">${this._getPointsMedian(c.id)}</td>\n                          <td  class=\"rubrics-summary-table-cell d-none\">${this._getPointsStdev(c.id)}</td>\n                        </tr>\n                      </table>\n                    </div>\n                    <dl class=\"dl-horizontal mb-0\">\n                        <dt>${this._i18n.average}</dt>\n                        <dd>\n                            ${this._getPointsAverage(c.id)}\n                        </dd>\n                        <dt>${this._i18n.median}</dt>\n                        <dd>\n                            ${this._getPointsMedian(c.id)}\n                        </dd>\n                        <dt>${this._i18n.stdev}</dt>\n                        <dd>\n                            ${this._getPointsStdev(c.id)}\n                        </dd>\n                    </dl>\n                  </div>\n                </div>\n              </div>\n            </div>\n          `)}\n          <div>${this._i18n.adjusted_score_warning}</div>\n        `}\n      `;\n    }\n\n    return html`\n      <h3>${this._i18n.student_summary}</h3>\n      ${!this._allEvaluations?.length ? html`\n      <div class=\"sak-banner-warn\">${this._i18n.no_evaluations_warning}</div>\n      ` : html`\n      <div class=\"table\">\n        <table id=\"student-summary\" class=\"rubrics-summary-table table table-bordered table-sm\">\n          <thead>\n            <tr>\n              <th class=\"rubrics-summary-table-cell rubrics-summary-table-cell-wide\">${this._i18n.student_name}</th>\n              ${this._criteria.map(c => html`<th class=\"rubrics-summary-table-cell\" >${c.title}</th>`)}\n              <th class=\"rubrics-summary-table-cell rubrics-summary-average-cell\">${this._i18n.score}</th>\n            </tr>\n          </thead>\n          <tbody>\n          ${this._allEvaluations.map(e => html`\n            <tr>\n              <td class=\"rubrics-summary-table-cell rubrics-summary-table-cell-wide nameColumn\">${e.sortName}</td>\n              ${e.criterionOutcomes.map(o => html`\n              <td class=\"rubrics-summary-table-cell rubrics-summary-table-cell point-cell-${o.criterionId}\" >${o.points}</td>\n              `)}\n              <td class=\"rubrics-summary-table-cell rubrics-summary-average-cell point-cell-score\" >${e.score}</td>\n            </tr>\n          `)}\n          </tbody>\n          <tfoot>\n            <tr>\n              <th class=\"rubrics-summary-table-cell rubrics-summary-table-cell-wide rubrics-summary-average-row \" >${this._i18n.average}</th>\n              ${this._criteria.map(c => html`\n              <td class=\"rubrics-summary-table-cell rubrics-summary-average-row\">${this._averages.get(c.id)}</td>\n              `)}\n              <td class=\"rubrics-summary-table-cell rubrics-summary-average-cell rubrics-summary-average-row\" >${this._averageScore}</td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n      ` }\n    `;\n  }\n\n  _getAssociation() {\n\n    this.apiGetAssociation()\n      .then(association => {\n\n        this.association = association;\n        this.getRubric(association.rubricId);\n      })\n      .catch (error => console.error(error));\n  }\n\n  getRubric(rubricId) {\n\n    this.apiGetRubric(rubricId)\n      .then(rubric => {\n\n        this._rubric = rubric;\n        this._criteria = this._rubric.criteria;\n      })\n      .catch (error => console.error(error));\n  }\n\n  _getAllEvaluations() {\n\n    this.apiGetAllEvaluations()\n      .then(evaluations => {\n\n        this._allEvaluations = evaluations;\n        this._averages = new Map();\n        this._averageScore = 0;\n        let totalScores = 0;\n        this._allEvaluations.forEach(evaluation => {\n\n          totalScores += evaluation.score;\n\n          evaluation.criterionOutcomes.forEach(co => {\n\n            if (!this._averages.has(co.criterionId)) {\n              this._averages.set(co.criterionId, co.points);\n            } else {\n              this._averages.set(co.criterionId, this._averages.get(co.criterionId) + co.points);\n            }\n          });\n        });\n\n        this._averages.forEach((v, k, m) => m.set(k, (v / this._allEvaluations.length).toFixed(2)));\n        this._averageScore = (totalScores / this._allEvaluations.length).toFixed(2);\n      })\n      .catch (error => console.error(error));\n  }\n\n  _limitCharacters(text, chars) {\n\n    if (text.length > parseInt(chars)) {\n      return `${text.substring(0, parseInt(chars))}...`;\n    }\n    return text;\n  }\n\n  _getACount(criterionId, ratingId) {\n\n    let total = 0;\n    this._allEvaluations.forEach(evaluation => {\n\n      evaluation.criterionOutcomes.forEach(oc => {\n\n        if (oc.criterionId === parseInt(criterionId)\n            && this._doesScoreMatchRating(oc.points, criterionId, ratingId)) {\n          total = total + 1;\n        }\n      });\n    });\n    return total;\n  }\n\n  _doesScoreMatchRating(score, criterionId, ratingId) {\n\n    const criterion = this._criteria.find(c => c.id === criterionId);\n    //We can always use weightedPoints because it will simply be the normal value if the rubric is not weighted.\n    return criterion.ratings.some(r => r.weightedPoints === parseFloat(score) && r.id === ratingId);\n  }\n\n  _getPointsAverage(criterionId) {\n\n    let total = 0;\n    this._allEvaluations.forEach(ev => {\n\n      ev.criterionOutcomes.forEach(oc => {\n\n        if (oc.criterionId === criterionId) {\n          total = total + oc.points;\n        }\n      });\n    });\n\n    return (total / this._allEvaluations.length).toFixed(2);\n  }\n\n  _getPoints(criterionId) {\n\n    const values = [];\n    this._allEvaluations.forEach(ev => {\n\n      ev.criterionOutcomes.forEach(oc => {\n\n        if (oc.criterionId === criterionId) {\n          values.push(oc.points);\n        }\n      });\n    });\n    return values;\n  }\n\n  _getPointsMedian(criterionId) {\n\n    const values = this._getPoints(criterionId);\n\n    if (values.length === 0) {\n      return 0;\n    }\n    values.sort((a, b) => a - b);\n    const half = Math.floor(values.length / 2);\n    if (values.length % 2) {\n      return values[half];\n    }\n    return ((values[half - 1] + values[half]) / 2.0).toFixed(2);\n  }\n\n  _getPointsStdev(criterionId) {\n\n    const average = this._getPointsAverage(criterionId);\n    const values = this._getPoints(criterionId);\n    let total = 0;\n    values.forEach(v => total = total + (average - v) * (average - v));\n    total = total / values.length;\n    return Math.sqrt(total).toFixed(2);\n  }\n\n  _getCustomCount(criterionId, floorPointsParam) {\n\n    let ceilingPoints = 5000;\n    const criterion = this._criteria.find(c => c.id === criterionId);\n    const floorPoints = parseFloat(floorPointsParam);\n    criterion.ratings.every(r => {\n\n      if (r.weightedPoints > floorPoints) {\n        ceilingPoints = r.weightedPoints;\n        return false;\n      }\n      return true;\n    });\n    let total = 0;\n    this._allEvaluations.forEach(ev => {\n\n      ev.criterionOutcomes.forEach(oc => {\n\n        if (oc.criterionId === parseFloat(criterionId) && oc.points > floorPoints && oc.points < ceilingPoints) {\n          total = total + 1;\n        }\n      });\n    });\n    return total;\n  }\n\n  _expandAll() {\n\n    this.querySelectorAll(\".collapse-toggle.collapsed\").forEach(el => el.click());\n  }\n\n  _collapseAll() {\n\n    Array.from(this.querySelectorAll(\".collapse-toggle\"))\n      .filter(el => !el.classList.contains(\"collapsed\")).forEach(el => el.click());\n  }\n}\n", "import { SakaiRubricSummary } from \"./src/SakaiRubricSummary.js\";\n\ncustomElements.define(\"sakai-rubric-summary\", SakaiRubricSummary);\n", "export const GRADING_RUBRIC = \"grading-rubric\";\nexport const STUDENT_SUMMARY = \"student-summary\";\nexport const CRITERIA_SUMMARY = \"criteria-summary\";\n", "import { RubricsElement } from \"./RubricsElement.js\";\nimport { html, nothing } from \"lit\";\nimport { unsafeHTML } from \"lit/directives/unsafe-html.js\";\nimport \"../sakai-rubric-grading-comment.js\";\nimport \"../sakai-rubric-pdf.js\";\nimport \"../sakai-rubric-summary.js\";\nimport { getUserId } from \"@sakai-ui/sakai-portal-utils\";\nimport { rubricsApiMixin } from \"./SakaiRubricsApiMixin.js\";\nimport { GRADING_RUBRIC, CRITERIA_SUMMARY, STUDENT_SUMMARY } from \"./sakai-rubrics-constants.js\";\n\nexport class SakaiRubricGrading extends rubricsApiMixin(RubricsElement) {\n\n  static properties = {\n\n    siteId: { attribute: \"site-id\", type: String },\n    toolId: { attribute: \"tool-id\", type: String },\n    entityId: { attribute: \"entity-id\", type: String },\n    evaluatedItemId: { attribute: \"evaluated-item-id\", type: String },\n    evaluatedItemOwnerId: { attribute: \"evaluated-item-owner-id\", type: String },\n    isPeerOrSelf: { attribute: \"is-peer-or-self\", type: Boolean },\n    isPeerGroupGraded: { attribute: \"is-peer-group-graded\", type: Boolean },\n    group: { type: Boolean },\n    enablePdfExport: { attribute: \"enable-pdf-export\", type: Boolean },\n\n    _evaluation: { state: true },\n    _totalPoints: { state: true },\n    _criteria: { state: true },\n    _rubric: { state: true },\n    _currentView: { state: true },\n  };\n\n  constructor() {\n\n    super();\n\n    this._rubric = { title: \"\" };\n    this._criteria = [];\n    this._totalPoints = -1;\n\n    this._currentView = GRADING_RUBRIC;\n\n    this.instanceSalt = Math.floor(Math.random() * Date.now());\n  }\n\n  set entityId(value) {\n\n    this._entityId = value;\n    this._getAssociation();\n  }\n\n  get entityId() { return this._entityId; }\n\n  set evaluatedItemId(value) {\n\n    this._evaluatedItemId = value;\n    this._getAssociation();\n  }\n\n  get evaluatedItemId() { return this._evaluatedItemId; }\n\n  set toolId(value) {\n\n    this._toolId = value;\n    this._getAssociation();\n  }\n\n  get toolId() { return this._toolId; }\n\n  _viewSelected(e) {\n\n    this._currentView = e.target.value;\n\n    switch (e.target.value) {\n      case GRADING_RUBRIC:\n        this.openGradePreviewTab();\n        break;\n      case STUDENT_SUMMARY:\n        this.makeStudentSummary();\n        break;\n      case CRITERIA_SUMMARY:\n        this.makeCriteriaSummary();\n        break;\n      default:\n    }\n  }\n\n  closeCommentEditors() {\n    this.querySelectorAll(\"sakai-rubric-grading-comment\").forEach(c => c.hideEditor());\n  }\n\n  shouldUpdate() {\n    return this._i18n && this.association;\n  }\n\n  render() {\n\n    return html`\n      <div class=\"rubric-details grading\">\n        <h3>\n          <span>${this._rubric.title}</span>\n          ${this.enablePdfExport ? html`\n            <sakai-rubric-pdf\n                rubric-title=\"${this._rubric.title}\"\n                site-id=\"${this.siteId}\"\n                rubric-id=\"${this._rubric.id}\"\n                tool-id=\"${this.toolId}\"\n                entity-id=\"${this.entityId}\"\n                evaluated-item-id=\"${this.evaluatedItemId}\">\n            </sakai-rubric-pdf>\n          ` : nothing }\n        </h3>\n\n        <select @change=${this._viewSelected}\n            aria-label=\"${this._i18n.rubric_view_selection_title}\"\n            title=\"${this._i18n.rubric_view_selection_title}\" .value=${this._currentView}>\n          <option value=\"grading-rubric\">${this._i18n.grading_rubric}</option>\n          <option value=\"${STUDENT_SUMMARY}\">${this._i18n.student_summary}</option>\n          <option value=\"${CRITERIA_SUMMARY}\">${this._i18n.criteria_summary}</option>\n        </select>\n\n        <div id=\"rubric-grading-or-preview-${this.instanceSalt}\" class=\"rubric-tab-content rubrics-visible mt-1\">\n          ${this._evaluation && this._evaluation.status === \"DRAFT\" && !this.isPeerOrSelf ? html`\n          <div class=\"sak-banner-warn\">\n            ${this.tr(\"draft_evaluation\", [ this.tr(`draft_evaluation_${this.toolId}`) ])}\n          </div>\n          ` : html`\n            <div class=\"mb-3\"></div>\n          `}\n          <div class=\"criterion grading style-scope sakai-rubric-criteria-grading\">\n          ${this._criteria.map(c => html`\n            <div id=\"criterion_row_${c.id}\" class=\"criterion-row\">\n              ${this.isCriterionGroup(c) ? html`\n                <div id=\"criterion_row_${c.id}\" class=\"criterion-group\">\n                  <div class=\"criterion-detail\">\n                    <h4 class=\"criterion-title\">${c.title}</h4>\n                    <p>${unsafeHTML(c.description)}</p>\n                  </div>\n                </div>\n              ` : html`\n                <div class=\"criterion-detail\" tabindex=\"0\">\n                  <h4 class=\"criterion-title\">${c.title}</h4>\n                  <p>${unsafeHTML(c.description)}</p>\n                  ${this._rubric.weighted ? html`\n                    <div class=\"criterion-weight\">\n                      <span>${this._i18n.weight}</span>\n                      <span>${c.weight.toLocaleString(this.locale)}</span>\n                      <span>${this._i18n.percent_sign}</span>\n                    </div>\n                  ` : nothing }\n                </div>\n                <div class=\"criterion-ratings\">\n                  <div class=\"cr-table\">\n                    <div class=\"cr-table-row\">\n                    ${c.ratings.map(r => html`\n                      <div class=\"rating-item ${r.selected ? \"selected\" : \"\"}\"\n                            tabindex=\"0\"\n                            data-rating-id=\"${r.id}\"\n                            id=\"rating-item-${r.id}\"\n                            data-criterion-id=\"${c.id}\"\n                            @keypress=${this.toggleRating}\n                            @click=${this.toggleRating}>\n                        <h5 class=\"criterion-item-title\">${r.title}</h5>\n                        <p>${r.description}</p>\n                        <span class=\"points\" data-points=\"${r.points}\">\n                          ${this._rubric.weighted && r.points > 0 ? html`\n                            <b>\n                              (${parseFloat((r.points * (c.weight / 100)).toFixed(2)).toLocaleString(this.locale)})\n                            </b>\n                          ` : nothing }\n                          ${r.points.toLocaleString(this.locale)}\n                          ${this._i18n.points}\n                        </span>\n                      </div>\n                    `)}\n                    </div>\n                  </div>\n                </div>\n                <div class=\"criterion-actions\">\n                  <sakai-rubric-grading-comment id=\"comment-for-${c.id}\"\n                      @comment-shown=${this.commentShown}\n                      @update-comment=${this.updateComment}\n                      .criterion=${c}\n                      evaluated-item-id=\"${this.evaluatedItemId}\"\n                      entity-id=\"${this.entityId}\">\n                  </sakai-rubric-grading-comment>\n                  <div class=\"rubric-grading-points-value\">\n                    <strong id=\"points-display-${c.id}\" class=\"points-display ${this.getOverriddenClass(c.pointoverride, c.selectedvalue)}\">\n                      ${c.selectedvalue.toLocaleString(this.locale)}\n                    </strong>\n                  </div>\n                  ${this.association.parameters.fineTunePoints ? html`\n                    <input\n                        title=\"${this.tr(\"point_override_details\")}\"\n                        data-criterion-id=\"${c.id}\"\n                        name=\"rbcs-${this.evaluatedItemId}-${this.entityId}-criterion-override-${c.id}\"\n                        class=\"fine-tune-points form-control hide-input-arrows\"\n                        @input=${this.fineTuneRating}\n                        .value=\"${c.pointoverride.toLocaleString(this.locale)}\"\n                    >\n                  ` : nothing }\n                  <input aria-labelledby=\"${this.tr(\"points\")}\" type=\"hidden\" id=\"rbcs-${this.evaluatedItemId}-${this.entityId}-criterion-${c.id}\" name=\"rbcs-${this.evaluatedItemId}-${this.entityId}-criterion-${c.id}\" .value=\"${c.selectedvalue}\">\n                  <input type=\"hidden\" name=\"rbcs-${this.evaluatedItemId}-${this.entityId}-criterionrating-${c.id}\" .value=\"${c.selectedRatingId}\">\n                </div>\n              </div>\n              `}\n            </div>\n          `)}\n          </div>\n          <div class=\"rubric-totals\">\n            <input type=\"hidden\"\n                aria-labelledby=\"${super.tr(\"total\")}\"\n                id=\"rbcs-${this.evaluatedItemId}-${this.entityId}-totalpoints\"\n                name=\"rbcs-${this.evaluatedItemId}-${this.entityId}-totalpoints\"\n                .value=\"${this._totalPoints.toString()}\">\n            <div class=\"total-points\">\n              <span>${this._i18n.total}</span>: <strong id=\"sakai-rubrics-total-points\">${this._totalPoints.toLocaleString(this.locale, { maximumFractionDigits: 2 })}</strong>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div id=\"rubric-student-summary-${this.instanceSalt}\" class=\"rubric-tab-content\"></div>\n      <div id=\"rubric-criteria-summary-${this.instanceSalt}\" class=\"rubric-tab-content\"></div>\n    `;\n  }\n\n  openGradePreviewTab() {\n    this.openRubricsTab(`rubric-grading-or-preview-${this.instanceSalt}`);\n  }\n\n  makeStudentSummary() {\n    this.makeASummary(\"student\", this.siteId);\n  }\n\n  makeCriteriaSummary() {\n    this.makeASummary(\"criteria\", this.siteId);\n  }\n\n  updateComment(e) {\n\n    console.debug(\"updateComment\");\n\n    this._criteria.forEach(c => {\n\n      if (c.id === e.detail.criterionId) {\n        c.comments = e.detail.value;\n      }\n    });\n\n    this.dispatchRatingChanged(this._criteria, 1);\n  }\n\n  release() {\n\n    console.debug(\"release\");\n\n    if (this._evaluation.criterionOutcomes.length) {\n      // We only want to inform the enclosing tool about ratings changes\n      // for an existing evaluation\n      this.dispatchRatingChanged(this._criteria, 2);\n    }\n  }\n\n  save() {\n\n    console.debug(\"save\");\n\n    this.dispatchRatingChanged(this._criteria, 1);\n  }\n\n  decorateCriteria() {\n\n    console.debug(\"decorateCriteria\");\n\n    this._evaluation.criterionOutcomes.forEach(ed => {\n\n      this._criteria.forEach(c => {\n\n        if (ed.criterionId === c.id) {\n\n          c.selectedRatingId = ed.selectedRatingId;\n          if (ed.pointsAdjusted) {\n            c.pointoverride = ed.points;\n            const ratingItem = c.ratings.filter(r => r.id == ed.selectedRatingId)[0];\n            if (ratingItem) {\n              c.selectedvalue = ratingItem.points;\n              ratingItem.selected = true;\n            }\n          } else {\n            const ratingItem = c.ratings.filter(r => r.id == ed.selectedRatingId)[0];\n            if (ratingItem) {\n              ratingItem.selected = true;\n            }\n            c.pointoverride = ed.points;\n            c.selectedvalue = ed.points;\n          }\n\n          c.comments = ed.comments;\n        }\n      });\n    });\n\n    this.updateTotalPoints(false);\n  }\n\n  fineTuneRating(e) {\n\n    console.debug(\"fineTuneRating\");\n\n    const value = e.target.value;\n\n    const parsed = value.replace(/,/g, \".\");\n\n    if (isNaN(parseFloat(parsed))) {\n      return;\n    }\n\n    const criterion = this._criteria.find(c => c.id == e.target.dataset.criterionId);\n\n    criterion.pointoverride = parsed;\n    if (criterion.selectedvalue) {\n      this._totalPoints = this._totalPoints - criterion.selectedvalue + criterion.pointoverride;\n    } else {\n      this._totalPoints = this._totalPoints + criterion.pointoverride;\n    }\n\n    const detail = {\n      evaluatedItemId: this.evaluatedItemId,\n      entityId: this.entityId,\n      criterionId: criterion.id,\n      value: criterion.pointoverride,\n    };\n    this.dispatchEvent(new CustomEvent(\"rubric-rating-tuned\", { detail, bubbles: true, composed: true }));\n\n    this.updateTotalPoints();\n    this.dispatchRatingChanged(this._criteria, 1);\n  }\n\n  dispatchRatingChanged(criteria, status) {\n\n    console.debug(\"dispatchRatingChanged\");\n\n    const crit = criteria.map(c => {\n\n      return {\n        criterionId: c.id,\n        points: c.pointoverride ? parseFloat(c.pointoverride) : c.selectedvalue,\n        comments: c.comments,\n        pointsAdjusted: c.pointoverride !== c.selectedvalue,\n        selectedRatingId: c.selectedRatingId\n      };\n    });\n\n    const evaluation = {\n      evaluatorId: this.isPeerGroupGraded ? this.evaluatedItemId : getUserId(),\n      id: this._evaluation.id,\n      evaluatedItemId: this.evaluatedItemId,\n      evaluatedItemOwnerId: this.evaluatedItemOwnerId,\n      evaluatedItemOwnerType: this.group ? \"GROUP\" : \"USER\",\n      overallComment: \"\",\n      criterionOutcomes: crit,\n      associationId: this.association.id,\n      peerOrSelf: this.isPeerOrSelf,\n      status,\n    };\n\n    if (this._evaluation && this._evaluation.id) {\n      evaluation.metadata = this._evaluation.metadata;\n    }\n\n    let url = `/api/sites/${this.siteId}/rubric-evaluations`;\n    if (this._evaluation?.id) url += `/${this._evaluation.id}`;\n    fetch(url, {\n      body: JSON.stringify(evaluation),\n      credentials: \"include\",\n      headers: { \"Content-Type\": \"application/json\" },\n      method: this._evaluation?.id ? \"PUT\" : \"POST\",\n    })\n    .then(r => {\n\n      if (r.ok) {\n        return r.json();\n      }\n\n      throw new Error(\"Server error while saving rubric evaluation\");\n    })\n    .then(data => {\n\n      this.dispatchEvent(new CustomEvent(\"rubric-ratings-changed\", { bubbles: true, composed: true }));\n      this._evaluation = data;\n      return Promise.resolve(this._evaluation);\n    })\n    .catch(error => console.error(error));\n  }\n\n  getOverriddenClass(ovrdvl, selected) {\n\n    console.debug(\"getOverriddenClass\");\n\n    if (!this.association.parameters.fineTunePoints) {\n      return \"\";\n    }\n\n    if ((ovrdvl || ovrdvl === 0) && parseFloat(ovrdvl) !== parseFloat(selected)) {\n      return \"strike\";\n    }\n    return \"\";\n  }\n\n  clear() {\n\n    this.evaluation = {};\n    this._criteria.forEach(c => {\n\n      c.ratings.forEach(r => r.selected = false);\n      c.pointoverride = \"\";\n      c.comments = \"\";\n      c.selectedvalue = 0;\n      this.querySelectorAll(\"sakai-rubric-grading-comment\").forEach(gc => gc.requestUpdate());\n    });\n    this.requestUpdate();\n  }\n\n  displayGradingTab() {\n\n    this.openGradePreviewTab();\n    this._currentView = GRADING_RUBRIC;\n  }\n\n  emptyCriterion(criterion) {\n\n    console.debug(\"emptyCriterion\");\n\n    criterion.selectedvalue = 0.0;\n    criterion.selectedRatingId = 0;\n    criterion.pointoverride = 0.0;\n    criterion.ratings.forEach(r => r.selected = false);\n  }\n\n  toggleRating(e) {\n\n    console.debug(\"toggleRating\");\n\n    e.stopPropagation();\n\n    const criterionId = parseInt(e.currentTarget.dataset.criterionId);\n    const ratingId = parseInt(e.currentTarget.dataset.ratingId);\n\n    // Look up the criterion and rating objects\n    const criterion = this._criteria.filter(c => c.id == criterionId)[0];\n    const rating = criterion.ratings.filter(r => r.id === ratingId)[0];\n\n    if (rating.selected) {\n      this.emptyCriterion(criterion);\n      rating.selected = false;\n      e.currentTarget.blur();\n    } else {\n      criterion.ratings.forEach(r => r.selected = false);\n      const auxPoints = this._rubric.weighted ?\n        (rating.points * (criterion.weight / 100)).toFixed(2) : rating.points;\n      criterion.selectedvalue = auxPoints;\n      criterion.selectedRatingId = rating.id;\n      criterion.pointoverride = auxPoints;\n      rating.selected = true;\n    }\n\n    // Whenever a rating is clicked, either to select or deselect, it cancels out any override so we\n    // remove the strike out from the clicked points value\n    this.querySelector(`#points-display-${criterionId}`).classList.remove(\"strike\");\n\n    this.requestUpdate();\n    this.updateTotalPoints();\n\n    this.dispatchRatingChanged(this._criteria, 1);\n  }\n\n  commentShown(e) {\n\n    console.debug(\"commentShown\");\n\n    this.querySelectorAll(`sakai-rubric-grading-comment:not(#${e.target.id})`).forEach(c => c.hide());\n  }\n\n  updateTotalPoints(notify = true) {\n\n    console.debug(\"updateTotalPoints\");\n\n    this._totalPoints = this._criteria.reduce((a, c) => {\n\n      if (c.pointoverride) {\n        return a + parseFloat(c.pointoverride);\n      } else if (c.selectedvalue) {\n        return a + parseFloat(c.selectedvalue);\n      }\n      return a;\n\n    }, 0);\n\n    this._totalCriterionPoints = this._criteria.reduce((a, c) => {\n      const maxRatingPoints = Math.max(...c.ratings.map(r => r.points));\n      return a + maxRatingPoints;\n    }, 0);\n\n    // Make sure total points is not negative\n    if (parseFloat(this._totalPoints) < 0) this._totalPoints = 0;\n\n    if (notify) {\n      const detail = {\n        evaluatedItemId: this.evaluatedItemId,\n        entityId: this.entityId,\n        value: this._totalPoints.toLocaleString(this.locale, { maximumFractionDigits: 2 }),\n        totalCriterionPoints: this._totalCriterionPoints.toLocaleString(this.locale, { maximumFractionDigits: 2 }),\n      };\n\n      this.dispatchEvent(new CustomEvent(\"total-points-updated\", { detail, bubbles: true, composed: true }));\n    }\n  }\n\n  cancel() {\n\n    console.debug(\"cancel\");\n\n    if (this._evaluation.status !== \"DRAFT\") return;\n\n    const url = `/api/sites/${this.siteId}/rubric-evaluations/${this._evaluation.id}/cancel`;\n\n    fetch(url, { credentials: \"include\" })\n    .then(r => {\n\n      if (r.ok) {\n        return r.json();\n      }\n\n      throw new Error(\"Failed to cancel rubric evaluation\");\n    })\n    .then(restored => {\n\n      this._evaluation = restored;\n      // Unset any ratings\n      this._criteria.forEach(c => c.ratings.forEach(r => r.selected = false));\n      // And set the original ones\n      this.decorateCriteria();\n    })\n    .catch(error => console.error(error));\n  }\n\n  _getAssociation() {\n\n    console.debug(\"_getAssociation\");\n\n    if (!this.toolId || !this.entityId || !this.evaluatedItemId) {\n      return;\n    }\n\n    this.apiGetAssociation()\n      .then(association => {\n\n        this.association = association;\n        this._rubricId = association.rubricId;\n        this._getRubric(this._rubricId);\n      })\n      .catch (error => console.error(error));\n  }\n\n  _getRubric(rubricId) {\n\n    console.debug(\"_getRubric\");\n\n    this.apiGetRubric(rubricId)\n      .then(rubric => {\n\n        if (this.evaluatedItemId) {\n          this.apiGetEvaluation()\n            .then(evaluation => {\n\n              this._evaluation = evaluation || { criterionOutcomes: [] };\n              this._rubric = rubric;\n              this._criteria = this._rubric.criteria;\n              this._criteria.forEach(c => {\n\n                c.pointoverride = \"\";\n\n                if (!c.selectedvalue) {\n                  c.selectedvalue = 0;\n                }\n                c.pointrange = this.getHighLow(c.ratings);\n              });\n\n              this.decorateCriteria();\n\n              if (this.isPeerOrSelf) { // For self-review buttons locking\n                this.dispatchEvent(new CustomEvent(\"rubrics-grading-loaded\", { bubbles: true, composed: true }));\n                this.updateComplete.then(() => this.dispatchEvent(new CustomEvent(\"rubric-ratings-changed\", { bubbles: true, composed: true })));\n              }\n            })\n            .catch(error => console.error(error));\n        } else {\n          this._rubric = rubric;\n          this._criteria = this._rubric.criteria;\n        }\n      })\n      .catch(error => console.error(error));\n  }\n}\n", "import { SakaiRubricGrading } from \"./src/SakaiRubricGrading.js\";\n\ncustomElements.define(\"sakai-rubric-grading\", SakaiRubricGrading);\n"],
  "mappings": "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",
  "names": ["SakaiRubricGradingComment", "RubricsElement", "editorOptions", "editorKey", "editorFunction", "updateEvent", "ke", "SakaiRubricGradingComment", "rubricsApiMixin", "Base", "url", "r", "rubricId", "rubricUrl", "SakaiRubricSummary", "rubricsApiMixin", "RubricsElement", "ke", "c", "r", "e", "o", "association", "error", "rubricId", "rubric", "evaluations", "totalScores", "evaluation", "co", "v", "k", "m", "text", "chars", "criterionId", "ratingId", "total", "oc", "score", "ev", "values", "a", "b", "half", "average", "floorPointsParam", "ceilingPoints", "criterion", "floorPoints", "el", "SakaiRubricSummary", "GRADING_RUBRIC", "STUDENT_SUMMARY", "CRITERIA_SUMMARY", "SakaiRubricGrading", "rubricsApiMixin", "RubricsElement", "GRADING_RUBRIC", "value", "e", "STUDENT_SUMMARY", "CRITERIA_SUMMARY", "c", "ke", "D", "ae", "r", "ed", "ratingItem", "parsed", "criterion", "detail", "criteria", "status", "crit", "evaluation", "getUserId", "url", "data", "error", "ovrdvl", "selected", "gc", "criterionId", "ratingId", "rating", "auxPoints", "notify", "a", "maxRatingPoints", "restored", "association", "rubricId", "rubric", "SakaiRubricGrading"]
}
